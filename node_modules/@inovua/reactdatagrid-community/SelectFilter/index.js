/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _debounce = _interopRequireDefault(require("../packages/debounce"));
var _ComboBox = _interopRequireDefault(require("../packages/ComboBox"));
var _src = _interopRequireDefault(require("../packages/react-scroll-container-pro/src"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var renderScroller = function renderScroller(props) {
  delete props.tabIndex;
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, props), {}, {
    className: "".concat(props.className, " InovuaReactDataGrid__column-header__filter--select__scroller")
  }));
};
var renderListScroller = function renderListScroller(props) {
  return _react.default.createElement(_src.default, _objectSpread(_objectSpread({}, props), {}, {
    showScrollbars: true,
    applyCSSContainOnScroll: false,
    renderScroller: renderScroller,
    viewStyle: {
      width: '100%'
    }
  }));
};
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var defaultProps = {
  nativeScroll: false
};
var SelectFilter = function (_React$Component) {
  (0, _inherits2.default)(SelectFilter, _React$Component);
  var _super = _createSuper(SelectFilter);
  function SelectFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, SelectFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getInputRef", function () {
      var _this$selectRef;
      return (_this$selectRef = _this.selectRef) === null || _this$selectRef === void 0 ? void 0 : _this$selectRef.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (_ref) {
      var value = _ref.filterValue.value;
      if (value && String(value).localeCompare(String(_this.props.filterValue && _this.props.filterValue.value))) {
        if (_this.props.filterValue) {
          _this.setValue(_this.props.filterValue.value);
        }
      }
    });
    var filterValue = props.filterValue;
    _this.state = {
      value: filterValue ? filterValue.value || null : null
    };
    _this.selectRef = (0, _react.createRef)();
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onValueChange = _this.onValueChange.bind((0, _assertThisInitialized2.default)(_this));
    if (props.filterDelay && props.filterDelay >= 1) {
      _this.onValueChange = (0, _debounce.default)(_this.onValueChange, props.filterDelay);
    }
    return _this;
  }
  (0, _createClass2.default)(SelectFilter, [{
    key: "onChange",
    value: function onChange(value) {
      this.onValueChange(value);
      this.setValue(value);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.setState({
        value: value
      });
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value) {
      this.props.onChange && this.props.onChange(_objectSpread(_objectSpread({}, this.props.filterValue), {}, {
        value: value
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        filterValue = _this$props.filterValue,
        readOnly = _this$props.readOnly,
        disabled = _this$props.disabled,
        style = _this$props.style,
        nativeScroll = _this$props.nativeScroll,
        filterEditorProps = _this$props.filterEditorProps,
        rtl = _this$props.rtl,
        theme = _this$props.theme;
      var comboProps = {
        readOnly: readOnly,
        disabled: disabled,
        theme: theme,
        rtl: rtl,
        style: _objectSpread({
          minWidth: 0
        }, style)
      };
      if (filterValue) {
        comboProps.value = this.state.value;
      }
      var finalEditorProps = typeof filterEditorProps === 'function' ? filterEditorProps(this.props) : filterEditorProps;
      var finalProps = _objectSpread(_objectSpread({
        collapseOnSelect: true,
        renderListScroller: nativeScroll ? undefined : renderListScroller,
        dataSource: filterValue && filterValue.dataSource ? filterValue.dataSource : []
      }, finalEditorProps), {}, {
        onChange: this.onChange,
        ref: this.selectRef,
        className: 'InovuaReactDataGrid__column-header__filter InovuaReactDataGrid__column-header__filter--select'
      }, comboProps);
      var onKeyDown = finalProps.onKeyDown;
      finalProps.onKeyDown = function (e) {
        if (onKeyDown) {
          onKeyDown(e);
        }
        stopPropagation(e);
      };
      return this.props.render && this.props.render(_react.default.createElement(_ComboBox.default, _objectSpread({}, finalProps)));
    }
  }]);
  return SelectFilter;
}(_react.default.Component);
(0, _defineProperty2.default)(SelectFilter, "defaultProps", defaultProps);
var _default = SelectFilter;
exports.default = _default;