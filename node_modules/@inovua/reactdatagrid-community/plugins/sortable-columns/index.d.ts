/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
declare const _default: {
    name: string;
    hook: (props: {
        sortInfo?: import("../../types").TypeSortInfo | undefined;
        defaultSortInfo?: import("../../types").TypeSortInfo | undefined;
        allowUnsort: boolean;
    }, _: any, computedPropsRef: import("react").MutableRefObject<import("../../types").TypeComputedProps | null>) => {
        computedIsMultiSort: boolean;
        computedSortInfo: import("../../types").TypeSortInfo;
        setSortInfo: (sortInfo: import("../../types").TypeSortInfo) => void;
        toggleColumnSort: (colId: any, defaultSortingDirection?: "desc" | "asc" | undefined) => void;
        setColumnSortInfo: (column: string | number | {
            id: string | number;
            name?: string | number | undefined;
        } | {
            name: string | number;
            id?: string | number | undefined;
        }, dir: 0 | 1 | -1) => void;
        unsortColumn: (column: string | number | {
            id: string | number;
            name?: string | number | undefined;
        } | {
            name: string | number;
            id?: string | number | undefined;
        }) => void;
    };
    defaultProps: () => {
        sorty: ((sortInfo: import("../../packages/sorty").TypeSortInfo, data: any[]) => void) & {
            types?: any;
            _getSortFunctions?: ((sortInfo: import("../../packages/sorty").TypeSingleSortInfo[]) => void) | undefined;
            getFunction?: ((sortinfo: import("../../packages/sorty").TypeSingleSortInfo[]) => void) | undefined;
        };
        sortable: boolean;
    };
};
export default _default;
