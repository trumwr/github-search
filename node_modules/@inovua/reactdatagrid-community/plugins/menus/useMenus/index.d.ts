/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { MutableRefObject, SyntheticEvent } from 'react';
import { TypeComputedProps, TypeRowProps, TypeCellProps } from '../../../types';
export { default as renderColumnContextMenu } from './renderColumnContextMenu';
export { default as renderRowContextMenu } from './renderRowContextMenu';
declare const _default: (props: {}, computedProps: TypeComputedProps, computedPropsRef: MutableRefObject<TypeComputedProps | null>) => {
    onRowContextMenu: (rowProps: TypeRowProps, event: SyntheticEvent) => void;
    getMenuAvailableHeight: () => number;
    showRowContextMenu: (alignTo: any, rowProps: TypeRowProps, cellProps: TypeCellProps, onHide: (...args: any[]) => void) => void;
    showColumnContextMenu: (alignTo: any, cellProps: TypeCellProps, { computedVisibleIndex }: {
        computedVisibleIndex: number;
    }, onHide: (...args: any[]) => void) => void;
    hideColumnContextMenu: () => void;
    hideRowContextMenu: () => void;
    columnContextMenuProps: any;
    columnContextMenuInstanceProps: any;
    rowContextMenuProps: any;
    columnContextMenuInfoRef: MutableRefObject<{
        menuAlignTo: any;
        getMenuConstrainTo: () => any;
        menuOnHide: (...args: any[]) => void;
    }>;
    rowContextMenuInfoRef: MutableRefObject<{
        menuAlignTo: any;
        getMenuConstrainTo: () => any;
        cellProps?: any;
        menuOnHide: (...args: any[]) => void;
    }>;
    setColumnContextMenuProps: import("react").Dispatch<any>;
    setColumnContextMenuInstanceProps: import("react").Dispatch<any>;
    setRowContextMenuProps: import("react").Dispatch<any>;
    preventIEMenuCloseRef: MutableRefObject<boolean>;
    columnContextMenuIndex: MutableRefObject<number>;
};
export default _default;
