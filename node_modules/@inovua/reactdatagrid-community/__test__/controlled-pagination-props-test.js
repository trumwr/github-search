/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactDom = require("react-dom");
var _reactAddonsTestUtils = _interopRequireDefault(require("react-addons-test-utils"));
var _ = _interopRequireDefault(require(".."));
var _testUtils = require("../testUtils");
require("../../style/index.scss");
var _sorty = _interopRequireDefault(require("@inovua/sorty"));
var _getSortIcons = _interopRequireDefault(require("./utils/getSortIcons"));
var _wait = _interopRequireDefault(require("./utils/wait"));
describe('controlled props', function () {
  describe('- sortInfo change', function () {
    it('should call dataSource fn and correctly set header sort icon', function (done) {
      var columns = [{
        name: 'id',
        type: 'number'
      }, {
        name: 'name',
        width: 200
      }, {
        name: 'city',
        width: 200
      }];
      var data = [{
        name: 'marry',
        id: 2,
        city: 'paris'
      }, {
        name: 'john',
        id: 1,
        city: 'london'
      }, {
        name: 'bob',
        id: 3,
        city: 'liverpool'
      }];
      var lastSortInfo;
      var dataSource = function dataSource(_ref) {
        var sortInfo = _ref.sortInfo;
        lastSortInfo = sortInfo;
        return new Promise(function (resolve) {
          setTimeout(function () {
            var arr = [].concat(data);
            arr = sortInfo ? (0, _sorty.default)(sortInfo, arr) : arr;
            resolve(arr);
          }, 100);
        });
      };
      var gridInstance;
      var onInitialDataLoad = function onInitialDataLoad() {
        expect([1, 0, 0]).to.deep.equal((0, _getSortIcons.default)(gridInstance));
        expect(lastSortInfo.name).to.equal('id');
        expect(lastSortInfo.dir).to.equal(1);
        gridInstance.setProps({
          sortInfo: {
            name: 'city',
            dir: -1
          },
          onDataSourceResponse: function onDataSourceResponse() {
            setTimeout(function () {
              var sortIcons = (0, _getSortIcons.default)(gridInstance);
              expect([0, 0, -1]).to.deep.equal(sortIcons);
              expect(lastSortInfo.name).to.equal('city');
              expect(lastSortInfo.dir).to.equal(-1);
              gridInstance.unmount();
              done();
            }, 150);
          }
        });
      };
      gridInstance = (0, _testUtils.render)(_react.default.createElement(_.default, {
        dataSource: dataSource,
        sortInfo: {
          name: 'id',
          dir: 1
        },
        columns: columns,
        idProperty: "id",
        onDataSourceResponse: function onDataSourceResponse() {
          setTimeout(onInitialDataLoad, 50);
        }
      }));
    });
  });
});