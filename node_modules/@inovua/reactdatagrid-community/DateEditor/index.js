/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _selectParent = _interopRequireDefault(require("../packages/select-parent"));
var _DateInput = _interopRequireDefault(require("../packages/Calendar/DateInput"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var defaultProps = {
  relativeToViewport: false
};
var DateEditor = function (_React$Component) {
  (0, _inherits2.default)(DateEditor, _React$Component);
  var _super = _createSuper(DateEditor);
  function DateEditor(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateEditor);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domNode", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "constrainToNode", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "constrainTo", function () {
      return _this.constrainToNode;
    });
    _this.domRef = _react.default.createRef();
    _this.state = {
      position: 'bottom',
      expanded: false
    };
    _this.onExpandChange = _this.onExpandChange.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(DateEditor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.domNode = this.domRef.current;
      this.constrainToNode = (0, _selectParent.default)('.InovuaReactDataGrid', this.domNode);
      var cell = this.props.cell;
      var cellNode = cell && cell.getDOMNode() ? cell.getDOMNode() : cell && cell.domRef ? cell.domRef.current : null;
      if (cellNode) {
        var gridNode = (0, _selectParent.default)('.inovua-react-virtual-list', cellNode);
        var gridRect = gridNode.getBoundingClientRect();
        var cellRect = cellNode.getBoundingClientRect();
        if (cellRect.top > gridRect.top + 350) {
          this.setState({
            position: 'top'
          });
        }
      }
    }
  }, {
    key: "onExpandChange",
    value: function onExpandChange(expanded) {
      this.setState({
        expanded: expanded
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.props;
      return _react.default.createElement("div", {
        className: "InovuaReactDataGrid__cell__editor InovuaReactDataGrid__cell__editor--date",
        ref: this.domRef
      }, _react.default.createElement(_DateInput.default, {
        theme: props.theme,
        autoFocus: props.autoFocus,
        onExpandChange: this.onExpandChange,
        dateFormat: props.cellProps && props.cellProps.dateFormat || 'YYYY-MM-DD',
        defaultValue: props.value,
        pickerPosition: this.state.position,
        onChange: props.onChange,
        constrainTo: props.constrainTo || this.constrainTo,
        overlayProps: _objectSpread({
          target: function target() {
            return _this2.domNode;
          }
        }, props.overlayProps),
        relativeToViewport: props.relativeToViewport,
        renderPicker: props.renderPicker,
        onLazyBlur: props.onComplete,
        onClick: stopPropagation,
        onKeyDown: function onKeyDown(e) {
          if (e.key === 'Enter' && !_this2.state.expanded) {
            props.onComplete && props.onComplete();
          }
          if (e.key === 'Tab') {
            e.preventDefault();
            props.onTabNavigation && props.onTabNavigation(true, e.shiftKey ? -1 : 1);
          }
        }
      }));
    }
  }]);
  return DateEditor;
}(_react.default.Component);
(0, _defineProperty2.default)(DateEditor, "defaultProps", defaultProps);
var _default = DateEditor;
exports.default = _default;