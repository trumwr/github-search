/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _cleanProps = _interopRequireDefault(require("../../../common/cleanProps"));
var _DropdownButton = _interopRequireDefault(require("../../DropdownButton"));
var _Button = _interopRequireDefault(require("../../Button"));
var _join = _interopRequireDefault(require("../../../common/join"));
var _InovuaSplitButton$pr;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaSplitButton = function (_Component) {
  (0, _inherits2.default)(InovuaSplitButton, _Component);
  var _super = _createSuper(InovuaSplitButton);
  function InovuaSplitButton(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaSplitButton);
    _this = _super.call(this, props);
    _this.buttonRef = (0, _react.createRef)();
    _this.state = {
      focused: false,
      expanded: props.defaultExpanded
    };
    _this.handleBlur = _this.handleBlur.bind((0, _assertThisInitialized2.default)(_this));
    _this.onExpandedChange = _this.onExpandedChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(InovuaSplitButton, [{
    key: "onExpandedChange",
    value: function onExpandedChange(expanded) {
      this.props.onExpandedChange(expanded);
      if (this.props.expanded === undefined) {
        this.setState({
          expanded: expanded
        });
      }
    }
  }, {
    key: "getExpanded",
    value: function getExpanded() {
      return this.props.expanded === undefined ? this.state.expanded : this.props.expanded;
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        focused: false
      });
      this.props.onBlur(event);
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(event) {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        focused: true
      });
      this.props.onFocus(event);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = (0, _join.default)(props.rootClassName, props.className, props.rtl ? "".concat(props.rootClassName, "--rtl") : "".concat(props.rootClassName, "--ltr"), this.state.focused && "".concat(props.rootClassName, "--focused"), this.getExpanded() && "".concat(props.rootClassName, "--expanded"), props.disabled && "".concat(props.rootClassName, "--disabled"), props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme));
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaSplitButton.propTypes)), {}, {
        ref: this.buttonRef,
        className: className
      }), _react.default.createElement(_Button.default, _objectSpread(_objectSpread({}, this.getCommonProps()), this.getButtonProps())), _react.default.createElement(_DropdownButton.default, _objectSpread(_objectSpread({}, this.getCommonProps()), this.getDropdownButtonProps())));
    }
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var props = this.props;
      return {
        disabled: props.disabled,
        rtl: props.rtl,
        theme: props.theme,
        onFocus: this.handleFocus,
        onBlur: this.handleBlur
      };
    }
  }, {
    key: "getButtonProps",
    value: function getButtonProps() {
      var props = this.props;
      return _objectSpread(_objectSpread({
        tagName: props.tagName,
        icon: props.icon,
        iconPosition: props.iconPosition || props.arrowPosition
      }, props.buttonProps), {}, {
        onClick: function onClick() {
          props.onClick.apply(props, arguments);
          if (typeof props.buttonProps === 'function') {
            var _props$buttonProps;
            (_props$buttonProps = props.buttonProps).onClick.apply(_props$buttonProps, arguments);
          }
        },
        children: props.children,
        className: (0, _join.default)("".concat(props.rootClassName, "__button"), props.buttonProps.className)
      });
    }
  }, {
    key: "getDropdownButtonProps",
    value: function getDropdownButtonProps() {
      var _this2 = this;
      var props = this.props;
      return _objectSpread(_objectSpread({}, props.dropdownButtonWrapperProps), {}, {
        getAlignNode: function getAlignNode() {
          var node = _this2.buttonRef.current;
          return node;
        },
        onClick: props.onDropdownButtonClick,
        onExpandedChange: this.onExpandedChange,
        items: props.items,
        expanded: props.expanded,
        defaultExpanded: props.defaultExpanded,
        onMenuClick: props.onMenuClick,
        menu: props.menu,
        buttonProps: props.dropdownButtonProps,
        menuProps: props.menuProps,
        renderMenu: props.renderMenu,
        className: (0, _join.default)("".concat(props.rootClassName, "__dropdown-button"), props.menuProps.className)
      });
    }
  }]);
  return InovuaSplitButton;
}(_react.Component);
function emptyFn() {}
InovuaSplitButton.defaultProps = {
  rootClassName: 'inovua-react-toolkit-split-button',
  theme: 'default',
  onClick: emptyFn,
  onDropdownButtonClick: emptyFn,
  onMenuClick: emptyFn,
  onFocus: emptyFn,
  onBlur: emptyFn,
  onExpandedChange: emptyFn,
  items: [],
  buttonProps: {},
  menuProps: {},
  defaultExpanded: false,
  arrowPosition: 'end',
  rtl: false,
  isInovuaButton: true
};
InovuaSplitButton.propTypes = (_InovuaSplitButton$pr = {
  rtl: _propTypes.default.bool,
  isInovuaButton: _propTypes.default.bool,
  theme: _propTypes.default.string,
  tagName: _propTypes.default.string,
  renderMenu: _propTypes.default.func
}, (0, _defineProperty2.default)(_InovuaSplitButton$pr, "theme", _propTypes.default.string), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "rootClassName", _propTypes.default.string), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "onClick", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "icon", _propTypes.default.node), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "iconPosition", _propTypes.default.oneOf(['left', 'right', 'start', 'end'])), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "arrowPosition", _propTypes.default.oneOf(['left', 'right', 'start', 'end'])), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "buttonProps", _propTypes.default.object), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "dropdownButtonWrapperProps", _propTypes.default.object), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "dropdownButtonProps", _propTypes.default.object), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "disabled", _propTypes.default.bool), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "onExpandedChange", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "onDropdownButtonClick", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "onMenuClick", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "onClick", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "menuProps", _propTypes.default.object), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "items", _propTypes.default.array), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "menu", _propTypes.default.func), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "expanded", _propTypes.default.bool), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "pressed", _propTypes.default.bool), (0, _defineProperty2.default)(_InovuaSplitButton$pr, "defaultExpanded", _propTypes.default.bool), _InovuaSplitButton$pr);
var _default = InovuaSplitButton;
exports.default = _default;