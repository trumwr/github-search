/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _deepGet = _interopRequireDefault(require("../../deep-get"));
var _curry = _interopRequireDefault(require("./curry"));
var _types = _interopRequireDefault(require("./types"));
function isFn(fn) {
  return typeof fn === 'function';
}
var sorty = (0, _curry.default)(function (sortInfo, array) {
  return array.sort(getMultiSortFunction(sortInfo));
});
sorty.types = _types.default;
var getSingleSortFunction = function getSingleSortFunction(info) {
  if (!info) {
    return;
  }
  var field = info.name;
  var dir = info.dir === 'desc' || info.dir < 0 ? -1 : info.dir === 'asc' || info.dir > 0 ? 1 : 0;
  if (!dir) {
    return;
  }
  if (!info.fn && info.type) {
    info.fn = sorty.types[info.type];
  }
  if (!info.fn) {
    info.fn = sorty.types.string || _types.default.string;
  }
  var fn = info.fn;
  return function (first, second) {
    var a = field ? (0, _deepGet.default)(first, field) : first;
    var b = field ? (0, _deepGet.default)(second, field) : second;
    return dir * fn(a, b, first, second, info);
  };
};
var getSortFunctions = function getSortFunctions(sortInfo) {
  if (!Array.isArray(sortInfo)) {
    sortInfo = [sortInfo];
  }
  return sortInfo.map(getSingleSortFunction).filter(isFn);
};
var getMultiSortFunction = function getMultiSortFunction(sortInfo) {
  var fns = getSortFunctions(sortInfo);
  return function (first, second) {
    var result = 0;
    var i = 0;
    var len = fns.length;
    var fn;
    for (; i < len; i++) {
      fn = fns[i];
      if (!fn) {
        continue;
      }
      result = fn(first, second);
      if (result != 0) {
        return result;
      }
    }
    return result;
  };
};
sorty._getSortFunctions = getSortFunctions;
sorty.getFunction = getMultiSortFunction;
var _default = sorty;
exports.default = _default;