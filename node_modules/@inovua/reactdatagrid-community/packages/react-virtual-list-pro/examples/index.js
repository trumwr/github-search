/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _reactDom = require("react-dom");
var _react = _interopRequireDefault(require("react"));
var _RowHeightManager = _interopRequireDefault(require("../src/RowHeightManager"));
var _src = _interopRequireDefault(require("../src"));
require("../style/index.scss");
var _getGlobal = require("../../../getGlobal");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
globalObject.React = _react.default;
globalObject.RowHeightManager = _RowHeightManager.default;
globalObject.rhm = new _RowHeightManager.default(55, {});
var rowHeightManager = new _RowHeightManager.default(40, {
  3: 70,
  5: 90,
  7: 90,
  8: 90,
  18: 90,
  28: 120,
  32: 120,
  39: 120,
  49: 120,
  54: 120,
  71: 100,
  77: 100,
  89: 100,
  98: 100,
  112: 75,
  124: 100,
  131: 90,
  154: 70,
  162: 75,
  169: 90,
  180: 120,
  199: 75
});
var rowHeightManager1 = new _RowHeightManager.default(20);
globalObject.r = rowHeightManager;
globalObject.React = _react.default;
var countries = ['USA', 'UK', 'Romania', 'Spain', 'Italy', 'France', 'Germany', 'Brazil', 'Portugal', 'Denmark', 'Sweden'];
var names = (0, _toConsumableArray2.default)(Array(100)).map(function (_) {
  return _;
});
var colors = (0, _toConsumableArray2.default)(Array(20)).map(function (_) {
  return _;
});
var Cell = function (_React$Component) {
  (0, _inherits2.default)(Cell, _React$Component);
  var _super = _createSuper(Cell);
  function Cell() {
    (0, _classCallCheck2.default)(this, Cell);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Cell, [{
    key: "render",
    value: function render() {
      var index = this.props.index;
      var size = this.props.size || 1;
      var space = index % 5 * 3;
      var name = names[index % 20];
      var color = colors[index % 20];
      var secondColor = colors[index * 2 % 20];
      var part = _react.default.createElement("div", {
        style: {
          display: 'inline-block',
          border: '1px solid magenta',
          width: 600,
          marginLeft: 5
        }
      }, _react.default.createElement("div", {
        style: {
          display: 'inline-block',
          paddingTop: space,
          paddingBottom: space
        }
      }, name, " - ", index, " ", _react.default.createElement("input", {
        defaultValue: space
      }), _react.default.createElement("div", {
        style: {
          display: 'inline-block'
        }
      }, _react.default.createElement("div", {
        style: {
          display: 'inline-block'
        }
      }, "Country: ", countries[index % countries.length]), _react.default.createElement("div", {
        style: {
          background: color,
          display: 'inline-block'
        }
      }, "Base color: ", color))), _react.default.createElement("div", {
        style: {
          display: 'inline-block',
          color: secondColor,
          width: 100
        }
      }, secondColor));
      var children = (0, _toConsumableArray2.default)(Array(size)).map(function (x) {
        return part;
      });
      return _react.default.createElement("div", {
        "data-index": this.props['data-index'],
        "data-key": this.props['data-key'],
        style: _objectSpread(_objectSpread({}, this.props.style), {}, {
          width: '100%',
          paddingTop: space,
          paddingBottom: space,
          minWidth: 300,
          borderTop: index ? '1px solid blue' : 0
        }),
        children: children
      });
    }
  }]);
  return Cell;
}(_react.default.Component);
var App = function (_React$Component2) {
  (0, _inherits2.default)(App, _React$Component2);
  var _super2 = _createSuper(App);
  function App(props) {
    var _this;
    (0, _classCallCheck2.default)(this, App);
    _this = _super2.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderRow", function (data) {
      if (data.index === 3222222) {
        return _react.default.createElement(_src.default, (0, _defineProperty2.default)({
          tabIndex: 5,
          ref: function ref(c) {
            window.list = c;
          },
          style: {
            border: '3px solid blue',
            minWidth: 2000,
            height: data.rowHeight
          },
          useTransformPosition: true,
          showEmptyRows: true,
          nativeScroll: _this.state.nativeScroll,
          count: _this.state.count,
          renderRow: _this.rr,
          minRowWidth: 2000,
          rowHeightManager: rowHeightManager
        }, "showEmptyRows", _this.state.showEmptyRows));
      }
      return _react.default.createElement("div", {
        style: {
          border: '1px solid red',
          minWidth: 1505,
          height: 20 + (data.index + 5) % 10 * (5 + _this.state.x % 10)
        },
        key: data.index
      }, "Row ", data.index, " - empty? ", "".concat(data.empty));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "plusOne", function () {
      _this.setState({
        counter: _this.state.count + 1
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "toggleSendCounter", function () {
      _this.setState({
        sendCounter: !_this.state.sendCounter
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeScrollTop", function (e) {
      _this.setState({
        tempScrollTop: e.target.value * 1 || 0
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "go", function () {
      _this.setState({
        scrollTop: _this.state.tempScrollTop
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollTop", function (scrollTop) {
      _this.setState({
        scrollTop: scrollTop
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateRenderRow", function () {
      _this.renderRow = _this.constructor.prototype.renderRow.bind((0, _assertThisInitialized2.default)(_this));
      _this.setState({});
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "increaseCount", function (e) {
      e.preventDefault();
      _this.setState({
        count: _this.state.count + 10
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCount10", function () {
      _this.setState({
        count: 10
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCount5", function () {
      _this.setState({
        count: 5
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCount100", function () {
      _this.setState({
        count: 100
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCount20", function () {
      _this.setState({
        count: 20
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCount200", function () {
      _this.setState({
        count: 200
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "decreaseCount", function (e) {
      e.preventDefault();
      _this.setState({
        count: _this.state.count - 10
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "toggleNativeScroll", function () {
      _this.setState({
        nativeScroll: !_this.state.nativeScroll
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "toggleRtl", function () {
      _this.setState({
        rtl: !_this.state.rtl
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "increaseRowHeight", function () {
      _this.setState({
        rowHeight: _this.state.rowHeight + 5
      });
    });
    _this.rr = function (data) {
      return _react.default.createElement("div", {
        style: {
          border: '1px solid red',
          minWidth: 2000,
          height: data.rowHeight
        },
        key: data.index
      }, "Row ", data.index);
    };
    _this.state = {
      from: 0,
      count: 100,
      x: parseInt(Math.random() * 20),
      tempScrollTop: 0,
      renderRow: _this.renderRow.bind((0, _assertThisInitialized2.default)(_this)),
      rowHeight: 40,
      scrollTop: 0,
      list: true,
      nativeScroll: false,
      rtl: true,
      sendCounter: true,
      showEmptyRows: false,
      preventRtlInherit: false
    };
    _this.listStyle = {
      border: '1px solid magenta',
      margin: 20,
      height: 550
    };
    return _this;
  }
  (0, _createClass2.default)(App, [{
    key: "toggleEmptyRows",
    value: function toggleEmptyRows() {
      this.setState({
        showEmptyRows: !this.state.showEmptyRows
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      return _react.default.createElement("div", {
        style: {}
      }, _react.default.createElement("button", {
        onClick: function onClick() {
          _this2.setState({
            list: false
          });
        }
      }, "hide"), "Current count: ", this.state.count, ".", _react.default.createElement("button", {
        onClick: this.updateRenderRow
      }, "update renderRow"), _react.default.createElement("button", {
        onMouseDown: this.increaseRowHeight
      }, "increase row height"), _react.default.createElement("button", {
        onMouseDown: this.increaseCount
      }, "increase count"), _react.default.createElement("button", {
        onMouseDown: this.decreaseCount
      }, "decrease count"), _react.default.createElement("button", {
        onMouseDown: this.setCount5
      }, "set count 5"), _react.default.createElement("button", {
        onMouseDown: this.setCount10
      }, "set count 10"), _react.default.createElement("button", {
        onMouseDown: this.setCount20
      }, "set count 20"), _react.default.createElement("button", {
        onMouseDown: this.setCount100
      }, "set count 100"), _react.default.createElement("button", {
        onMouseDown: this.setCount200
      }, "set count 200"), _react.default.createElement("button", {
        onMouseDown: this.toggleEmptyRows
      }, "toggle empty rows"), _react.default.createElement("button", {
        onMouseDown: this.toggleRtl
      }, "toggleRtl"), _react.default.createElement("button", {
        onMouseDown: this.toggleNativeScroll
      }, "toggleNativeScroll"), _react.default.createElement("button", (0, _defineProperty2.default)({
        onClick: this.scrollToEnd
      }, "onClick", function onClick() {
        return list.scrollTop = 10000000000;
      }), "scrolltoend"), _react.default.createElement("button", {
        onClick: function onClick() {
          _this2.setState({
            x: parseInt(Math.random() * 10) + 20,
            renderRow: _this2.renderRow.bind(_this2)
          });
        }
      }, "refresh"), _react.default.createElement("input", null), this.state.list ? _react.default.createElement(_src.default, (0, _defineProperty2.default)({
        tabIndex: 5,
        ref: function ref(c) {
          window.list = c;
        },
        preventRtlInherit: this.state.preventRtlInherit,
        rowContain: true,
        nativeScroll: this.state.nativeScroll,
        rtl: this.state.rtl,
        showEmptyRows: true,
        style: this.listStyle,
        count: this.state.count,
        renderRow: this.state.renderRow,
        minRowWidth: 1505,
        minRowHeight: 20,
        naturalRowHeight: true,
        rowHeightManager: rowHeightManager1
      }, "showEmptyRows", this.state.showEmptyRows)) : null, _react.default.createElement("input", null));
    }
  }]);
  return App;
}(_react.default.Component);
(0, _reactDom.render)(_react.default.createElement(App, null), document.querySelector('#content'));