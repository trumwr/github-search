/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _Row = _interopRequireDefault(require("./Row"));
var _default = function _default(_ref) {
  var count = _ref.count,
    renderRow = _ref.renderRow,
    rowHeight = _ref.rowHeight,
    showEmptyRows = _ref.showEmptyRows,
    ref = _ref.ref,
    pure = _ref.pure,
    sticky = _ref.sticky,
    notifyRowSpan = _ref.notifyRowSpan,
    rowHeightManager = _ref.rowHeightManager,
    onRowHeightChange = _ref.onRowHeightChange,
    onKeyDown = _ref.onKeyDown,
    onFocus = _ref.onFocus,
    onMount = _ref.onMount,
    onUnmount = _ref.onUnmount,
    rowContain = _ref.rowContain,
    naturalRowHeight = _ref.naturalRowHeight,
    useTransformPosition = _ref.useTransformPosition,
    _ref$from = _ref.from,
    from = _ref$from === void 0 ? 0 : _ref$from,
    _ref$to = _ref.to,
    to = _ref$to === void 0 ? count : _ref$to,
    virtualized = _ref.virtualized;
  var rows = [];
  for (var i = from; i < to; i++) {
    rows.push(_react.default.createElement(_Row.default, {
      contain: rowContain,
      pure: pure,
      ref: ref,
      sticky: sticky,
      rowHeight: rowHeight,
      useTransformPosition: useTransformPosition,
      onRowHeightChange: onRowHeightChange,
      notifyRowSpan: notifyRowSpan,
      key: i,
      index: i,
      count: count,
      renderRow: renderRow,
      rowHeightManager: rowHeightManager,
      showEmptyRows: showEmptyRows,
      onKeyDown: onKeyDown,
      onFocus: onFocus,
      onMount: onMount,
      onUnmount: onUnmount,
      virtualized: virtualized,
      naturalRowHeight: naturalRowHeight
    }));
  }
  return rows;
};
exports.default = _default;