/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
declare class InertialManager {
    constructor({ node, viewNode, arrowSelector, threshold, timeConstant, initialAmplitude, enableMouseDrag, enableTouchDrag, setScrollPosition, }: {
        node: any;
        viewNode: any;
        arrowSelector: any;
        threshold?: number | undefined;
        timeConstant?: number | undefined;
        initialAmplitude?: number | undefined;
        enableMouseDrag?: boolean | undefined;
        enableTouchDrag?: boolean | undefined;
        setScrollPosition?: (() => void) | undefined;
    });
    addEventListeners(): void;
    removeEventListeners(): void;
    getEventListneres(): {
        onMouseDown: (event: any) => void;
        onMouseUp: (event: any) => void;
        onMouseMove: (event: any) => void;
        onTouchStart?: undefined;
        onTouchEnd?: undefined;
        onTouchMove?: undefined;
    } | {
        onTouchStart: (event: any) => void;
        onTouchEnd: (event: any) => void;
        onTouchMove: (event: any) => void;
        onMouseDown?: undefined;
        onMouseUp?: undefined;
        onMouseMove?: undefined;
    } | undefined;
    isArrowTarget(target: any): boolean;
    tap(event: any): void;
    drag(event: any): void;
    release(event: any): void;
    scrollTo(offset: any): null | undefined;
    autoScroll(): void;
    updateMaxScroll(): void;
    hasScroll(): boolean;
    track(): void;
}
export default InertialManager;
