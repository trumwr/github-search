/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Region", {
  enumerable: true,
  get: function get() {
    return _ToolbarRegion.default;
  }
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _cleanProps = _interopRequireDefault(require("../../../common/cleanProps"));
var _ToolbarRegion = _interopRequireDefault(require("./ToolbarRegion"));
var _join = _interopRequireDefault(require("../../../common/join"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var emptyFn = function emptyFn() {};
function isRegion(child) {
  return child && child.props && child.props.isToolbarRegion;
}
function toAlign(index, regions) {
  if (index == 0) {
    return 'start';
  }
  if (index == regions.length - 1) {
    return 'end';
  }
  return 'center';
}
var InovuaSimpleToolbar = function (_React$Component) {
  (0, _inherits2.default)(InovuaSimpleToolbar, _React$Component);
  var _super = _createSuper(InovuaSimpleToolbar);
  function InovuaSimpleToolbar() {
    (0, _classCallCheck2.default)(this, InovuaSimpleToolbar);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaSimpleToolbar, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var children = this.prepareChildren(props);
      var className = (0, _join.default)(props.className, "inovua-react-simple-toolbar", "inovua-react-simple-toolbar--orientation-".concat(props.orientation), props.theme ? "inovua-react-simple-toolbar--theme-".concat(props.theme) : null);
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaSimpleToolbar.propTypes)), {}, {
        children: children,
        className: className
      }));
    }
  }, {
    key: "prepareChildren",
    value: function prepareChildren(props) {
      var _this = this;
      var regionCount = 0;
      var children = [];
      var regions = [];
      _react.default.Children.forEach(props.children, function (child) {
        if (isRegion(child)) {
          regions.push(child);
          regionCount++;
        }
      });
      var regionIndex = -1;
      _react.default.Children.forEach(props.children, function (child) {
        if (isRegion(child)) {
          regionIndex++;
          child = _this.prepareRegion(child, regionIndex, regions);
        }
        children.push(child);
      });
      if (!regionCount) {
        var Factory = props.regionFactory || _ToolbarRegion.default;
        return this.prepareRegion(_react.default.createElement(Factory, null, children));
      }
      return children;
    }
  }, {
    key: "prepareRegion",
    value: function prepareRegion(region) {
      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var regions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var props = this.props;
      var regionStyle = _objectSpread({}, props.regionStyle);
      if (props.padding) {
        regionStyle.padding = props.padding;
      }
      var style = _objectSpread(_objectSpread({}, regionStyle), region.props.style);
      var align = region.props.align || toAlign(index, regions) || 'center';
      var theme = region.props.theme || props.theme;
      return (0, _react.cloneElement)(region, {
        style: style,
        theme: theme,
        orientation: props.orientation,
        align: align
      });
    }
  }]);
  return InovuaSimpleToolbar;
}(_react.default.Component);
InovuaSimpleToolbar.propTypes = {
  isReactToolbar: _propTypes.default.bool,
  orientation: _propTypes.default.oneOf(['vertical', 'horizontal']),
  padding: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  theme: _propTypes.default.string,
  regionFactory: _propTypes.default.func
};
InovuaSimpleToolbar.defaultProps = {
  isReactToolbar: true,
  orientation: 'horizontal',
  theme: 'default'
};
InovuaSimpleToolbar.Region = _ToolbarRegion.default;
var _default = InovuaSimpleToolbar;
exports.default = _default;