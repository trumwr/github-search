/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _reactDom = require("react-dom");
var _Button = _interopRequireDefault(require("../src/Button"));
var _RadioButtonGroup = _interopRequireDefault(require("../../RadioButtonGroup"));
var _DropdownButton = _interopRequireDefault(require("../../DropdownButton"));
var _SplitButton = _interopRequireDefault(require("../../SplitButton"));
var _CheckBox = _interopRequireDefault(require("../../CheckBox"));
require("../../CheckBox/style/index.scss");
require("../../RadioButtonGroup/style/index.scss");
require("../../DropdownButton/style/index.scss");
require("../../SplitButton/style/index.scss");
require("../style/index.scss");
require("typeface-roboto");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var icon = _react.default.createElement("svg", {
  style: {
    width: 24,
    height: 24
  }
}, _react.default.createElement("path", {
  fill: "#000000",
  d: "M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"
}));
var widthOptions = ['auto', 100, 200, 300].map(function (value) {
  return {
    value: value,
    label: typeof value == 'number' ? value + 'px' : value
  };
});
var themeOptions = ['light', 'default'].map(function (value) {
  return {
    value: value,
    label: value
  };
});
var alignOptions = ['center', 'start', 'end'].map(function (value) {
  return {
    value: value,
    label: value
  };
});
var verticalAlignOptions = ['middle', 'top', 'bottom'].map(function (value) {
  return {
    value: value,
    label: value
  };
});
var iconPositionOptions = ['start', 'end', 'top', 'bottom'].map(function (value) {
  return {
    value: value,
    label: value
  };
});
var PREVIEW_ICON = _react.default.createElement("svg", {
  fill: "#000000",
  height: "24",
  viewBox: "0 0 24 24",
  width: "24",
  xmlns: "http://www.w3.org/2000/svg"
}, _react.default.createElement("path", {
  d: "M0 0h24v24H0z",
  fill: "none"
}), _react.default.createElement("path", {
  d: "M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z"
}));
var items = [{
  label: 'New',
  icon: PREVIEW_ICON,
  cellStyle: {
    color: 'red'
  }
}, {
  label: 'Options',
  disabled: true
}, {
  label: 'Format'
}, {
  label: 'Save'
}, '-', {
  label: 'Export as'
}, {
  label: 'Document'
}];
var pressedIndex = 0;
var App = function (_React$Component) {
  (0, _inherits2.default)(App, _React$Component);
  var _super = _createSuper(App);
  function App(props) {
    var _this;
    (0, _classCallCheck2.default)(this, App);
    _this = _super.call(this, props);
    _this.state = {
      widthValue: '300',
      heightValue: '300',
      iconPosition: 'top',
      align: 'start',
      theme: 'default',
      verticalAlign: 'middle',
      showIcon: true,
      disabled: false
    };
    return _this;
  }
  (0, _createClass2.default)(App, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var style = {};
      var _this$state = this.state,
        widthValue = _this$state.widthValue,
        heightValue = _this$state.heightValue;
      if (widthValue != 'auto') {
        style.width = widthValue;
      }
      if (heightValue != 'auto') {
        style.height = heightValue;
      }
      return _react.default.createElement("div", {
        style: {
          fontFamily: 'Roboto',
          fontSize: 14,
          margin: 50
        }
      }, _react.default.createElement("div", {
        style: {
          margin: 20
        }
      }, _react.default.createElement("div", {
        style: {
          marginBottom: 30
        }
      }, "Button theme:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: themeOptions,
        radioValue: this.state.theme,
        onChange: function onChange(_ref) {
          var theme = _ref.checkedItemValue;
          return _this2.setState({
            theme: theme
          });
        }
      }), ' ', "|", ' ', _react.default.createElement("input", {
        type: "checkbox",
        checked: this.state.disabled,
        onChange: function onChange(ev) {
          return _this2.setState({
            disabled: ev.target.checked
          });
        }
      }), "disabled"), _react.default.createElement(_Button.default, {
        icon: icon,
        tagName: "div",
        theme: this.state.theme,
        pressed: true,
        onClick: function onClick() {
          console.log('click', Date.now());
        }
      }, "simple text button"), _react.default.createElement(_Button.default, {
        disabled: this.state.disabled,
        icon: icon,
        tagName: "div",
        theme: this.state.theme,
        pressed: false
      }, "simple text button"), _react.default.createElement(_Button.default, {
        disabled: this.state.disabled,
        icon: icon,
        tagName: "div",
        theme: 'light',
        pressed: true
      }, "simple text button"), _react.default.createElement(_Button.default, {
        icon: icon,
        tagName: "div",
        theme: 'light'
      }, "simple text button")), _react.default.createElement("div", {
        style: {
          margin: 30
        }
      }, _react.default.createElement("h3", null, "DropDownButton"), _react.default.createElement(_DropdownButton.default, {
        renderMenuWhenCollapsed: true,
        items: items
      }, "Hello")), _react.default.createElement("div", {
        style: {
          margin: 30
        }
      }, _react.default.createElement("h3", null, "SplitButton"), _react.default.createElement(_SplitButton.default, {
        dropdownButtonProps: {
          children: 'hello world'
        },
        items: items
      }, "Hello")), _react.default.createElement("div", {
        style: {
          fontFamily: 'Roboto',
          fontSize: 14
        }
      }, _react.default.createElement(_Button.default, {
        tagName: "div"
      }, "simple text button"), _react.default.createElement(_Button.default, {
        align: this.state.align,
        verticalAlign: this.state.verticalAlign,
        icon: this.state.showIcon ? _react.default.createElement("img", {
          src: "https://facebook.github.io/react/img/logo.svg",
          height: "30",
          width: "30"
        }) : null,
        iconPosition: this.state.iconPosition,
        style: style
      }, "Export as React Component"), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, "Button width:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: widthOptions,
        radioValue: this.state.widthValue,
        onChange: function onChange(_ref2) {
          var widthValue = _ref2.checkedItemValue;
          return _this2.setState({
            widthValue: widthValue
          });
        }
      })), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, "Button height:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: widthOptions,
        radioValue: this.state.heightValue,
        onChange: function onChange(_ref3) {
          var heightValue = _ref3.checkedItemValue;
          return _this2.setState({
            heightValue: heightValue
          });
        }
      })), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, "Align:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: alignOptions,
        radioValue: this.state.align,
        onChange: function onChange(_ref4) {
          var align = _ref4.checkedItemValue;
          return _this2.setState({
            align: align
          });
        }
      })), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, "Vertical align:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: verticalAlignOptions,
        radioValue: this.state.verticalAlign,
        onChange: function onChange(_ref5) {
          var verticalAlign = _ref5.checkedItemValue;
          return _this2.setState({
            verticalAlign: verticalAlign
          });
        }
      })), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, _react.default.createElement(_CheckBox.default, {
        checked: this.state.showIcon,
        onChange: function onChange(showIcon) {
          _this2.setState({
            showIcon: showIcon
          });
        }
      }, "Show icon")), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, "Icon position:", _react.default.createElement(_RadioButtonGroup.default, {
        style: {
          marginLeft: 20
        },
        orientation: "horizontal",
        radioOptions: iconPositionOptions,
        radioValue: this.state.iconPosition,
        onChange: function onChange(_ref6) {
          var iconPosition = _ref6.checkedItemValue;
          return _this2.setState({
            iconPosition: iconPosition
          });
        }
      }))));
    }
  }]);
  return App;
}(_react.default.Component);
var App1 = function (_Component) {
  (0, _inherits2.default)(App1, _Component);
  var _super2 = _createSuper(App1);
  function App1() {
    (0, _classCallCheck2.default)(this, App1);
    return _super2.apply(this, arguments);
  }
  (0, _createClass2.default)(App1, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "App",
        style: {
          padding: 10
        }
      }, _react.default.createElement(App, null), _react.default.createElement(_Button.default, {
        overflow: true,
        activeStyle: {
          background: 'blue'
        },
        onClick: function onClick() {
          return console.log('blue active button');
        }
      }, "hello"), _react.default.createElement(_Button.default, {
        type: "big",
        onClick: function onClick() {
          return console.log('big button');
        }
      }, "Save as"), _react.default.createElement(_Button.default, {
        href: "#test"
      }, "world"), _react.default.createElement(_Button.default, null, "primary no theme"), _react.default.createElement(_Button.default, {
        disabled: true
      }, "primary disabled"), _react.default.createElement(_Button.default, {
        defaultPressed: true
      }, "toggle button"), _react.default.createElement(_Button.default, {
        disabled: true
      }, "disabled"), _react.default.createElement(_Button.default, {
        ellipsis: true,
        style: {
          width: 100
        }
      }, "ellipsis ellipsis ellipsis ellipsis ellipsis ellipsis"), _react.default.createElement(_Button.default, {
        style: {
          width: 100
        },
        align: 'start'
      }, "left"), _react.default.createElement(_Button.default, {
        style: {
          width: 100
        },
        align: 'end'
      }, "right"), _react.default.createElement(_Button.default, {
        style: {
          width: 100
        },
        rtl: true,
        align: 'start'
      }, "rtl"), _react.default.createElement("h1", null, "Vertical align"), _react.default.createElement(_Button.default, {
        style: {
          height: 200,
          width: 650
        },
        icon: function icon() {
          return 'x';
        },
        iconPosition: "top"
      }, "A long line here"), _react.default.createElement("h1", null, "icons"), _react.default.createElement(_Button.default, {
        icon: icon,
        style: {
          width: 100
        }
      }, "icon default very long text"), _react.default.createElement(_Button.default, {
        icon: icon,
        iconPosition: "start"
      }, "icon start default"), _react.default.createElement(_Button.default, {
        icon: icon,
        iconPosition: "end"
      }, "icon end default"), _react.default.createElement(_Button.default, {
        style: {
          minWidth: 400
        },
        icon: icon,
        iconPosition: "left"
      }, "icon left default"), _react.default.createElement(_Button.default, {
        icon: icon,
        iconPosition: "right"
      }, "icon right default"), _react.default.createElement(_Button.default, {
        icon: icon,
        tagName: "div",
        iconPosition: "top"
      }, "icon top default"), _react.default.createElement(_Button.default, {
        icon: icon,
        iconPosition: "bottom"
      }, "icon bottom default"), _react.default.createElement("h1", null, "icons with ellipsis"), _react.default.createElement(_Button.default, {
        icon: icon,
        style: {
          width: 70
        },
        iconPosition: "bottom"
      }, "icon bottom default"));
    }
  }]);
  return App1;
}(_react.Component);
(0, _reactDom.render)(_react.default.createElement(App1, null), document.getElementById('content'));