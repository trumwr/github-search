/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
export declare const getPageCount: ({ count, limit }: {
    count: any;
    limit: any;
}) => number;
export declare const getSkipForPage: ({ page, limit }: {
    page: any;
    limit: any;
}) => number;
export declare const getCurrentPage: ({ skip, limit }: {
    skip: any;
    limit: any;
}) => number;
export declare const hasNextPage: ({ skip, limit, count }: {
    skip: any;
    limit: any;
    count: any;
}) => boolean;
export declare const hasPrevPage: ({ skip, limit }: {
    skip: any;
    limit: any;
}) => boolean;
export default class InovuaPaginationToolbar extends React.Component<any> {
    constructor(props: any);
    shouldComponentUpdate(nextProps: any, nextState: any): any;
    getSkip(props?: Readonly<any> & Readonly<{
        children?: React.ReactNode;
    }>): any;
    getLimit(props?: Readonly<any> & Readonly<{
        children?: React.ReactNode;
    }>): any;
    render(): any;
    renderCurrentPageInput({ pageCount, currentPage }: {
        pageCount: any;
        currentPage: any;
    }): any;
    renderPageSizeCombo(): any;
    renderIcon(name: any, disabled: any): any;
    componentDidUpdate: (prevProps: any) => void;
    setCurrentPageInputValue(value: any, props?: Readonly<any> & Readonly<{
        children?: React.ReactNode;
    }>): void;
    onBlur(): void;
    onNumberInputChange(numericValue: any): void;
    setPageSize(limit: any): void;
    gotoPage(page: any, { limit }?: {}): void;
    refresh(): void;
    gotoFirstPage(): void;
    gotoLastPage(): void;
    gotoNextPage(): void;
    gotoPrevPage(): void;
}
