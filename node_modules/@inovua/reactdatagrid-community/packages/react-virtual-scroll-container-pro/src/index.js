/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NativeScrollContainer = void 0;
Object.defineProperty(exports, "getScrollbarWidth", {
  enumerable: true,
  get: function get() {
    return _getScrollbarWidth.default;
  }
});
Object.defineProperty(exports, "hasSticky", {
  enumerable: true,
  get: function get() {
    return _hasSticky.default;
  }
});
Object.defineProperty(exports, "isMobile", {
  enumerable: true,
  get: function get() {
    return _StickyScroller.isMobile;
  }
});
var _getScrollbarWidth = _interopRequireDefault(require("../../../packages/getScrollbarWidth"));
var _hasSticky = _interopRequireDefault(require("../../../packages/hasSticky"));
var _StickyScroller = _interopRequireWildcard(require("./StickyScroller"));
var _old = _interopRequireDefault(require("./old"));
var _NativeScrollContainer = _interopRequireDefault(require("./old/NativeScrollContainer"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = (0, _hasSticky.default)() ? _StickyScroller.default : _old.default;
exports.default = _default;
var NativeScrollContainer = (0, _hasSticky.default)() ? _StickyScroller.default : _NativeScrollContainer.default;
exports.NativeScrollContainer = NativeScrollContainer;