/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import isMobile from '../../isMobile';
import getScrollbarWidth from '../../getScrollbarWidth';
declare class StickyVirtualScrollContainer extends React.Component {
    constructor(props: any);
    componentDidMount(): void;
    getDOMNode(): any;
    initializeScrollLeftForRtl: () => void;
    componentDidUpdate(prevProps: any): void;
    onResize: (...args: any[]) => void;
    sync: () => void;
    rafSync: () => void;
    get scrollTop(): any;
    get scrollTopMax(): any;
    set scrollTop(value: any);
    get scrollLeft(): any;
    get scrollLeftMax(): any;
    set scrollLeft(value: any);
    smoothScrollTo: (newValue: any, config: any, callback: any) => void;
    getScrollbars: () => {
        horizontal: any;
        vertical: any;
    };
    hasScrollbar: (orientation: any) => any;
    hasVerticalScrollbar: () => any;
    hasHorizontalScrollbar: () => any;
    focus: () => void;
    onFocus: (event: any) => void;
    getTransformNode: () => any;
    getScrollSize: () => any;
    getScrollPosition: () => {
        scrollTop: number;
        scrollLeft: number;
    };
    updateScrollStyle: (scrollPos: any, prevScrollPos: any) => void;
    getBeforeHeight: () => any;
    getAfterHeight: () => any;
    getBeforeAndAfterHeight: () => any;
    onViewResize: (...args: any[]) => void;
    renderScrollerSpacer: () => any;
    getEmptyScrollOffset(): any;
    renderScroller: (scrollerProps: any) => any;
    getBefore: () => React.DetailedReactHTMLElement<{
        style: any;
        children: JSX.Element;
    }, HTMLElement> | null;
    getAfter: () => React.DetailedReactHTMLElement<{
        style: any;
        children: JSX.Element;
    }, HTMLElement> | null;
    onBeforeElementResize: (size: any) => void;
    onAfterElementResize: (size: any) => void;
    render(): JSX.Element;
}
export default StickyVirtualScrollContainer;
export { isMobile, getScrollbarWidth };
