/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _join = _interopRequireDefault(require("../../../common/join"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var DEFAULT_CLASS_NAME = 'inovua-react-toolkit-load-mask__loader';
var LOADBAR_CLASSNAME = "".concat(DEFAULT_CLASS_NAME, "-loadbar");
var getMeasureName = function getMeasureName(duration) {
  if (typeof duration == 'number' || duration * 1 == duration) {
    return 's';
  }
  var measure;
  duration.match(/[a-zA-Z]*$/, function (match) {
    measure = match;
  });
  return measure || 's';
};
var InovuaSpinLoader = function (_React$Component) {
  (0, _inherits2.default)(InovuaSpinLoader, _React$Component);
  var _super = _createSuper(InovuaSpinLoader);
  function InovuaSpinLoader() {
    (0, _classCallCheck2.default)(this, InovuaSpinLoader);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaSpinLoader, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        width: props.size,
        height: props.size
      });
      var className = (0, _join.default)(props.className, DEFAULT_CLASS_NAME, "".concat(DEFAULT_CLASS_NAME, "--spin"), props.theme && "".concat(DEFAULT_CLASS_NAME, "--theme-").concat(props.theme));
      var animationDuration = props.animationDuration;
      var measureName = animationDuration ? getMeasureName(animationDuration) : '';
      var bars = (0, _toConsumableArray2.default)(Array(12)).map(function (_, i) {
        var index = i + 1;
        return _react.default.createElement("div", {
          key: index,
          className: "".concat(LOADBAR_CLASSNAME, " ").concat(LOADBAR_CLASSNAME, "--").concat(index)
        });
      });
      return _react.default.createElement("div", {
        style: style,
        className: className
      }, bars);
    }
  }]);
  return InovuaSpinLoader;
}(_react.default.Component);
InovuaSpinLoader.propTypes = {
  size: _propTypes.default.number,
  theme: _propTypes.default.string,
  animationDuration: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
InovuaSpinLoader.defaultProps = {
  size: 40
};
var _default = InovuaSpinLoader;
exports.default = _default;