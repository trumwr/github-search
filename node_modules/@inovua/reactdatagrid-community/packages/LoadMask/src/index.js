/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _cleanProps = _interopRequireDefault(require("../../../common/cleanProps"));
var _join = _interopRequireDefault(require("../../../common/join"));
var _SvgLoader = _interopRequireDefault(require("./SvgLoader"));
var _SpinLoader = _interopRequireDefault(require("./SpinLoader"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_CLASS_NAME = 'inovua-react-toolkit-load-mask';
var InovuaLoadMask = (0, _react.forwardRef)(function (props, ref) {
  var visibleClassName = props.visible ? "".concat(props.rootClassName, "--visible") : '';
  var className = (0, _join.default)(props.className, props.rootClassName, visibleClassName, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme));
  var layerClassName = (0, _join.default)(props.backgroundLayerClassName, "".concat(props.rootClassName, "__background-layer"));
  var style = _objectSpread({}, props.style);
  var layerStyle = _objectSpread({}, props.backgroundLayerStyle);
  if (props.zIndex != null) {
    style.zIndex = props.zIndex;
  }
  if (props.background !== true) {
    layerStyle.background = props.background === false ? 'transparent' : props.background;
  }
  if (props.backgroundOpacity != null) {
    layerStyle.opacity = props.backgroundOpacity;
  }
  var pointerEvents = props.pointerEvents;
  if (pointerEvents !== true) {
    style.pointerEvents = pointerEvents === false ? 'none' : pointerEvents;
  }
  var Loader = props.svgLoader ? _SvgLoader.default : _SpinLoader.default;
  return _react.default.createElement("div", _objectSpread(_objectSpread({
    ref: ref
  }, (0, _cleanProps.default)(props, InovuaLoadMask.propTypes)), {}, {
    className: className,
    style: style
  }), _react.default.createElement("div", {
    style: layerStyle,
    className: layerClassName
  }), _react.default.createElement("div", {
    className: "".concat(props.rootClassName, "__loader-container")
  }, _react.default.createElement(Loader, {
    size: props.size,
    theme: props.theme,
    animationDuration: props.animationDuration
  }), props.children));
});
InovuaLoadMask.defaultProps = {
  visible: true,
  svgLoader: true,
  theme: 'default-light',
  zIndex: 100,
  pointerEvents: true,
  backgroundOpacity: 0.6,
  background: true,
  backgroundLayerStyle: {},
  rootClassName: DEFAULT_CLASS_NAME
};
InovuaLoadMask.propTypes = {
  animationDuration: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  svgLoader: _propTypes.default.bool,
  zIndex: _propTypes.default.number,
  visible: _propTypes.default.bool,
  pointerEvents: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  backgroundOpacity: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  background: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  theme: _propTypes.default.string,
  backgroundLayerClassName: _propTypes.default.string,
  backgroundLayerStyle: _propTypes.default.object,
  rootClassName: _propTypes.default.string
};
var _default = InovuaLoadMask;
exports.default = _default;