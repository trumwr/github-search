/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _join = _interopRequireDefault(require("../../utils/join"));
function getClassName(_ref) {
  var props = _ref.props,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? {} : _ref$state;
  var listPosition = props.listPosition,
    _props$data = props.data,
    data = _props$data === void 0 ? [] : _props$data,
    className = props.className,
    theme = props.theme,
    rootClassName = props.rootClassName,
    loading = props.loading,
    relativeToViewport = props.relativeToViewport;
  var succesfullPosition = state.succesfullPosition;
  var constructedClassName = (0, _join.default)(rootClassName, className, listPosition && "".concat(rootClassName, "--").concat(listPosition), loading && "".concat(rootClassName, "--loading"), theme && "".concat(rootClassName, "--theme-").concat(theme), relativeToViewport && "".concat(rootClassName, "--relative-to-viewport"), data && !data.length && "".concat(rootClassName, "--empty"));
  if (succesfullPosition) {
    var positionName = succesfullPosition === 'bc-tc' ? 'top' : 'bottom';
    constructedClassName = (0, _join.default)(constructedClassName, "".concat(rootClassName, "--position-").concat(positionName));
  }
  return constructedClassName;
}
var _default = getClassName;
exports.default = _default;