/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _join = _interopRequireDefault(require("./join"));
function getRootClassName(_ref) {
  var _ref$props = _ref.props,
    props = _ref$props === void 0 ? {} : _ref$props,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? {} : _ref$state,
    _ref$computed = _ref.computed,
    computed = _ref$computed === void 0 ? {} : _ref$computed;
  var rootClassName = props.rootClassName,
    className = props.className,
    rtl = props.rtl,
    shadow = props.shadow,
    showShadowOnMouseOver = props.showShadowOnMouseOver,
    disabled = props.disabled,
    readOnly = props.readOnly,
    emptyClassName = props.emptyClassName,
    disabledClassName = props.disabledClassName,
    focusedClassName = props.focusedClassName,
    inlineFlex = props.inlineFlex,
    multiple = props.multiple,
    theme = props.theme;
  var over = state.over,
    focus = state.focus;
  var value = computed.value;
  var showShadow = showShadowOnMouseOver ? over && shadow : shadow;
  return (0, _join.default)(rootClassName, className, rtl ? "".concat(rootClassName, "--rtl") : "".concat(rootClassName, "--ltr"), showShadow && "".concat(rootClassName, "--shadow"), multiple && "".concat(rootClassName, "--multiple"), disabled && "".concat(rootClassName, "--disabled"), readOnly && "".concat(rootClassName, "--readOnly"), theme && "".concat(rootClassName, "--theme-").concat(theme), inlineFlex && "".concat(rootClassName, "--inlineFlex"), focus && "".concat(rootClassName, "--focus"), !value && emptyClassName, disabled && disabledClassName, focus && focusedClassName);
}
var _default = getRootClassName;
exports.default = _default;