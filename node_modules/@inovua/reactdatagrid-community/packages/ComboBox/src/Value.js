/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _join = _interopRequireDefault(require("./utils/join"));
var _ComboBox = require("./ComboBox");
var _Tag = _interopRequireDefault(require("./Tag"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Value = function (_Component) {
  (0, _inherits2.default)(Value, _Component);
  var _super = _createSuper(Value);
  function Value(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Value);
    _this = _super.call(this, props);
    _this.state = {
      size: null
    };
    return _this;
  }
  (0, _createClass2.default)(Value, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var value = props.value,
        multiple = props.multiple,
        rootClassName = props.rootClassName,
        toolsSize = props.toolsSize,
        focus = props.focus,
        rtl = props.rtl,
        searchable = props.searchable,
        wrapMultiple = props.wrapMultiple,
        label = props.label;
      var showTags = value != null && multiple;
      var style = _objectSpread({}, props.style);
      if (toolsSize) {
        style.maxWidth = "calc(100% - ".concat(toolsSize.width, "px)");
      }
      var className = (0, _join.default)(rootClassName, wrapMultiple ? "".concat(rootClassName, "--wrap") : "".concat(rootClassName, "--no-wrap"), "".concat(rootClassName, "--").concat(rtl ? 'rtl' : 'ltr'));
      var isDisplayValueVisible = !showTags && !focus;
      if (!showTags && !searchable) {
        isDisplayValueVisible = true;
      }
      if (value == null) {
        isDisplayValueVisible = false;
      }
      var displayValue = isDisplayValueVisible ? this.renderDisplayValue() : null;
      return _react.default.createElement("div", {
        className: className,
        style: style
      }, showTags && this.renderTags(), displayValue, this.renderTextInput({
        isDisplayValueVisible: displayValue
      }));
    }
  }, {
    key: "renderTextInput",
    value: function renderTextInput(_ref) {
      var isDisplayValueVisible = _ref.isDisplayValueVisible;
      var textInput = this.props.textInput;
      if (!textInput) {
        return null;
      }
      if (textInput.type !== 'input') {
        return _react.default.cloneElement(textInput, _objectSpread(_objectSpread({}, textInput.props), {}, {
          visible: !isDisplayValueVisible && this.props.searchable
        }));
      }
      return textInput;
    }
  }, {
    key: "renderDisplayValue",
    value: function renderDisplayValue() {
      var _this$props = this.props,
        rootClassName = _this$props.rootClassName,
        label = _this$props.label,
        renderDisplayValue = _this$props.renderDisplayValue;
      var domProps = {
        className: "".concat(rootClassName, "__display-value"),
        children: label
      };
      var result = null;
      if (typeof renderDisplayValue === 'function') {
        result = renderDisplayValue({
          domProps: domProps,
          label: label
        });
      }
      if (result == null) {
        result = _react.default.createElement("div", _objectSpread({}, domProps));
      }
      return result;
    }
  }, {
    key: "renderTags",
    value: function renderTags() {
      var _this2 = this;
      var _this$props2 = this.props,
        renderTags = _this$props2.renderTags,
        value = _this$props2.value,
        items = _this$props2.items,
        groupedItems = _this$props2.groupedItems;
      if (!items) {
        return null;
      }
      var remainingItems;
      var visibleItems;
      if (groupedItems) {
        remainingItems = groupedItems.remainingItems;
        visibleItems = groupedItems.visibleItems;
      } else {
        visibleItems = items;
      }
      var remainingTags = remainingItems && this.renderTag(remainingItems, this.props.maxTagsLength, {
        visibleItems: visibleItems
      });
      var visibleTags = visibleItems && visibleItems.map(function (item, index) {
        return _this2.renderTag(item, index);
      });
      var tags = [].concat((0, _toConsumableArray2.default)(visibleTags), [remainingTags]);
      if (typeof renderTags === 'function') {
        tags = renderTags({
          tags: tags,
          items: items,
          value: value,
          visibleItems: visibleItems,
          remainingItems: remainingItems
        });
      }
      return tags;
    }
  }, {
    key: "renderTag",
    value: function renderTag(item, index) {
      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var items = this.props.items;
      if (!item) {
        return null;
      }
      var _this$props3 = this.props,
        rootClassName = _this$props3.rootClassName,
        renderTag = _this$props3.renderTag,
        activeTag = _this$props3.activeTag,
        maxTagsLength = _this$props3.maxTagsLength,
        renderTagLabel = _this$props3.renderTagLabel,
        renderRemainingTags = _this$props3.renderRemainingTags;
      var tagRootClassName = "".concat(rootClassName, "__tag");
      var isMultiple = Array.isArray(item);
      var active = isMultiple ? activeTag === _ComboBox.REMAINING_ITEMS : activeTag === item.id;
      var tagProps = _objectSpread(_objectSpread(_objectSpread({
        item: item,
        items: items,
        active: active,
        isMultiple: isMultiple,
        renderTagLabel: renderTagLabel,
        maxTagsLength: maxTagsLength,
        index: index,
        renderTag: renderTag
      }, config), this.props.tagProps), {}, {
        rootClassName: tagRootClassName,
        key: index
      });
      var tag;
      if (isMultiple && typeof renderRemainingTags === 'function') {
        tag = renderRemainingTags({
          remainingItems: item,
          visibleItems: config.visibleItems,
          domProps: tagProps
        });
      }
      if (tag === undefined) {
        tag = _react.default.createElement(_Tag.default, _objectSpread({}, tagProps));
      }
      return tag;
    }
  }]);
  return Value;
}(_react.Component);
Value.defaultProps = {
  tagProps: {},
  groupedItems: null,
  items: []
};
var VALUE_TYPE = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool]))]);
Value.propTypes = {
  size: _propTypes.default.shape({
    width: _propTypes.default.number,
    height: _propTypes.default.number
  }),
  focus: _propTypes.default.bool,
  items: _propTypes.default.array,
  item: _propTypes.default.object,
  groupedItems: _propTypes.default.shape({
    visibleItems: _propTypes.default.array,
    remainingItems: _propTypes.default.array
  }),
  renderTag: _propTypes.default.func,
  renderRemainingTags: _propTypes.default.func,
  renderTags: _propTypes.default.func,
  renderTagLabel: _propTypes.default.func,
  tagProps: _propTypes.default.object,
  maxTagsLength: _propTypes.default.number,
  rootClassName: _propTypes.default.string,
  multiple: _propTypes.default.bool,
  textInput: _propTypes.default.node,
  value: VALUE_TYPE
};
var _default = Value;
exports.default = _default;