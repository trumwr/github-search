/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Component } from 'react';
declare class InovuaArrowScroller extends Component {
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    getScrollerNodeClientSize: (node: any) => {
        width: any;
        height: any;
    };
    renderScroller(direction: any): any;
    renderArrowIcon(name: any): JSX.Element;
    getOffsetSizeName(): "offsetHeight" | "offsetWidth";
    getBorderAndPaddingSize(node: any, side: any): any;
    getSizeName(): "height" | "width";
    getAvailableSize(): any;
    getCurrentListSize(): any;
    handleResize(): void;
    handleScrollMax(direction: any, event: any): void;
    handleClick(direction: any): void;
    stopScroll(): void;
    rafUpdateScrollInfo(): void;
    updateScrollInfo(count: any): void;
    startScroll(direction: any, event: any): void;
    onContainerScroll({ scrollTop, scrollLeft }: {
        scrollTop: any;
        scrollLeft: any;
    }): void;
    startMouseOverScroll(direction: any, event: any): void;
    stopMouseOverScroll(): void;
    setScrollPosition(scrollPos: any, { force, skip }?: {
        force: any;
        skip: any;
    }): null | undefined;
    syncScroll({ force }?: {
        force: any;
    }): void;
    scrollIntoView(domNode: any): void;
    doScroll(direction: any, step: any, { force }?: {
        force: any;
    }): void;
    scrollBy(offset: any, direction: any, { force }?: {
        force: any;
    }): void;
    onScrollContainerDidMount: (scrollContainer: any, domNode: any, notifyResizer: any) => void;
    onScrollContainerWillUnmount: () => void;
}
export default InovuaArrowScroller;
