/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _reactDom = require("react-dom");
var _Overlay = _interopRequireDefault(require("../src/Overlay"));
require("./index.scss");
require("../style/index.scss");
require("../../Menu/style/index.scss");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var items = [{
  id: 0,
  label: 'First'
}, {
  id: 1,
  label: 'Second'
}, {
  id: 2,
  label: 'Third'
}, {
  id: 3,
  label: 'Fourth'
}, {
  id: 4,
  label: 'Fivth'
}];
var App = function (_Component) {
  (0, _inherits2.default)(App, _Component);
  var _super = _createSuper(App);
  function App(props) {
    var _this;
    (0, _classCallCheck2.default)(this, App);
    _this = _super.call(this, props);
    _this.state = {
      visible: false,
      showButtons: true
    };
    return _this;
  }
  (0, _createClass2.default)(App, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "wrapper"
      }, _react.default.createElement(_Overlay.default, {
        showEvent: ['click'],
        hideEvent: ['click'],
        width: "200",
        height: "200",
        positions: ['tr-br'],
        xhideOnClickOutside: true,
        xrafOnMount: true,
        xrelativeToViewport: true,
        target: function target(_, node) {
          return node ? node.parentNode : null;
        }
      }, _react.default.createElement("div", {
        style: {
          visibility: 'visible',
          border: '1px solid red',
          width: 200,
          height: 200
        }
      }, "dgsgsfdgdsfgdfd")));
    }
  }]);
  return App;
}(_react.Component);
var rootTree = (0, _reactDom.render)(_react.default.createElement(App, null), document.getElementById('content'));