/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Component } from 'react';
declare class InovuaNumericInput extends Component {
    constructor(props: any);
    setInputRef(el: any): void;
    render(): JSX.Element;
    renderClearButtonWrapper(): JSX.Element;
    renderClearButton(config: any): JSX.Element;
    renderClearIcon: (svgProps: any) => any;
    renderSpinnerToolsWrapper(): JSX.Element;
    renderSpinnerTools(config: any): JSX.Element[];
    renderArrowUpIcon: (svgProps: any) => any;
    renderArrowDownIcon: (svgProps: any) => any;
    getArrowEvents(): {
        upEvents: {
            [x: string]: (event: any) => void;
        };
        downEvents: {
            [x: string]: (event: any) => void;
        };
    };
    handleClearButtonClick(event: any): void;
    handleArrowDown(shiftStep: any, event: any): void;
    handleMouseUp(): void;
    getTransformedStringValues(value: any): any[];
    handleFocus(event: any): void;
    handleBlur(event: any): void;
    handleChange(event: any): void;
    setValue(value: any, { silent }?: {
        silent: any;
    }): void;
    setIntermediateValue(intermediateValue: any, callback: any): void;
    onChange(value: any): void;
    handleBackspaceKeyDown(event: any): void;
    handleDigitKeyDown(): void;
    handleDecimalDelimiterKeyDown(event: any): void;
    getSelectedText(): string;
    handleSelectionOverDecimalDelimiter(event: any, currentSelection: any): void;
    handleKeyUp(event: any): void;
    handleKeyDown(event: any): void;
    handleArrowDownKeyDown(event: any): void;
    handleArrowUpKeyDown(event: any): void;
    handleArrowKeySpin(direction: any, event: any): void;
    handleArrowUpKeyUp(): void;
    handleArrowDownKeyUp(): void;
    onSpinKeyUp(): void;
    getInput(): any;
    getNumericValue(): any;
    getValue(): any;
    isFocused(): boolean;
    getStepValue(props: any, direction: any, config: any): any;
    stepTo(direction: any, config: any): void;
    setValueOnSpin(value: any): void;
    stopSpin(): void;
    startSpin(direction: any, config: any): void;
    isSpinning(): boolean;
    handleWheel(event: any): void;
    focus(): void;
    getSelectionStart(): any;
    getProps(props: any, state: any): any;
}
export default InovuaNumericInput;
