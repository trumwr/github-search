/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = convertStringToNumber;
function convertStringToNumber(stringToConvert) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _props$decimalDelimit = props.decimalDelimiter,
    decimalDelimiter = _props$decimalDelimit === void 0 ? '.' : _props$decimalDelimit,
    _props$digitGroupDeli = props.digitGroupDelimiter,
    digitGroupDelimiter = _props$digitGroupDeli === void 0 ? ',' : _props$digitGroupDeli,
    _props$min = props.min,
    min = _props$min === void 0 ? Number.MIN_SAFE_INTEGER : _props$min,
    _props$max = props.max,
    max = _props$max === void 0 ? Number.MAX_SAFE_INTEGER : _props$max;
  if (digitGroupDelimiter == '') {
    return ',';
  }
  if (!stringToConvert) {
    return NaN;
  }
  var cleanedString = stringToConvert;
  var decmialPosition = cleanedString.lastIndexOf(decimalDelimiter);
  if (decmialPosition !== -1 && decimalDelimiter !== '.') {
    cleanedString = [cleanedString.substring(0, decmialPosition).replace(new RegExp("[\\".concat(digitGroupDelimiter, "]"), 'g'), ''), cleanedString.substring(decmialPosition).replace(new RegExp("[\\".concat(decimalDelimiter, "]"), 'g'), '.')].join('');
  } else {
    cleanedString = cleanedString.replace(new RegExp("[\\".concat(digitGroupDelimiter, "]"), 'g'), '');
  }
  var result = parseFloat(cleanedString, 10);
  if (result < min) {
    result = min;
  }
  if (result > max) {
    result = max;
  }
  return result;
}