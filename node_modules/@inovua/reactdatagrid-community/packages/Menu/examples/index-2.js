/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _reactDom = require("react-dom");
var _reactClass = _interopRequireDefault(require("@inovua/react-class"));
var _src = _interopRequireDefault(require("../src"));
require("./index.scss");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var items = [{
  label: 'country and style',
  name: 'selecte country',
  items: [{
    label: 'ro',
    name: 'country',
    value: 'ro'
  }, {
    label: 'de',
    name: 'country',
    value: 'de'
  }, {
    label: 'es',
    name: 'country',
    value: 'es'
  }, {
    label: 'uk',
    name: 'country',
    value: 'uk'
  }, {
    label: 'no input'
  }, {
    label: 'bold',
    name: 'bold'
  }, {
    label: 'italic',
    name: 'italic'
  }, {
    label: 'strikethrough',
    name: 'strikethrough'
  }]
}, {
  label: _react.default.createElement("strong", null, "strong")
}];
var longListOfItemsWithStyle = [{
  label: 'Home',
  name: 'test col name'
}, {
  label: 'Shop',
  name: 'cool name'
}, {
  label: 'Shop',
  name: 'cool name'
}, '-', {
  label: 'Hello World',
  name: 'cool name',
  items: [{
    label: 'Product 1',
    items: [{
      label: 'Sub Product 1',
      disabled: true
    }, {
      label: 'Sub Product 2'
    }, {
      label: 'Sub Product 3'
    }, {
      label: 'Sub Product 4'
    }]
  }, {
    label: 'Product 2'
  }, {
    label: 'Product 3'
  }, {
    label: 'Product 4'
  }]
}];
var PREVIEW_ICON = _react.default.createElement("svg", {
  fill: "#000000",
  height: "24",
  viewBox: "0 0 24 24",
  width: "24",
  xmlns: "http://www.w3.org/2000/svg"
}, _react.default.createElement("path", {
  d: "M0 0h24v24H0z",
  fill: "none"
}), _react.default.createElement("path", {
  d: "M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z"
}));
var App = function (_Component) {
  (0, _inherits2.default)(App, _Component);
  var _super = _createSuper(App);
  function App(props) {
    var _this;
    (0, _classCallCheck2.default)(this, App);
    _this = _super.call(this, props);
    _this.state = {
      checkState: {},
      selected: {
        country: 'ro',
        bold: 'bold',
        italic: 'italic'
      }
    };
    return _this;
  }
  (0, _createClass2.default)(App, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var onChange = function onChange(event) {
        var value = event.target.value;
        var checked = event.target.checked;
        _this2.setState({
          checkState: _objectSpread(_objectSpread({}, _this2.state.checkState), {}, (0, _defineProperty2.default)({}, value, checked))
        });
      };
      return _react.default.createElement("div", null, _react.default.createElement("h3", null, "submenustyle and item active style"), _react.default.createElement(_src.default, {
        items: items,
        submenuStyle: {
          border: '1px solid red'
        },
        itemActiveStyle: {
          background: 'pink',
          color: 'green'
        }
      }), _react.default.createElement("h3", null, "items separated by titles"), _react.default.createElement(_src.default, {
        items: [{
          isTitle: true,
          label: 'Country'
        }, {
          label: 'ro',
          name: 'country',
          value: 'ro'
        }, {
          label: 'de',
          name: 'country',
          value: 'de'
        }, {
          label: 'es',
          name: 'country',
          value: 'es'
        }, {
          label: 'uk',
          name: 'country',
          value: 'uk'
        }, {
          isTitle: true,
          label: 'Style'
        }, {
          label: 'bold',
          name: 'bold'
        }, {
          label: 'italic',
          name: 'italic'
        }, {
          label: 'strikethrough',
          name: 'strikethrough'
        }]
      }), _react.default.createElement("h3", null, "nested simple and multiple selection"), _react.default.createElement(_src.default, {
        enableSelection: true,
        defaultSelected: this.state.selected,
        dismissOnClick: false,
        items: [{
          label: 'country and style',
          name: 'selecte country',
          items: [{
            label: 'ro',
            name: 'country',
            value: 'ro'
          }, {
            label: 'de',
            name: 'country',
            value: 'de'
          }, {
            label: 'es',
            name: 'country',
            value: 'es'
          }, {
            label: 'uk',
            name: 'country',
            value: 'uk'
          }, {
            label: 'no input'
          }, {
            label: 'bold',
            name: 'bold'
          }, {
            label: 'italic',
            name: 'italic'
          }, {
            label: 'strikethrough',
            name: 'strikethrough'
          }]
        }, {
          label: _react.default.createElement("strong", null, "strong")
        }]
      }), _react.default.createElement("h3", null, "nested simple and multiple selection with input position end"), _react.default.createElement(_src.default, {
        enableSelection: true,
        defaultSelected: this.state.selected,
        dismissOnClick: false,
        selectionInputPosition: 'end',
        items: [{
          label: 'country and style',
          name: 'selecte country',
          items: [{
            label: 'ro',
            name: 'country',
            value: 'ro'
          }, {
            label: 'de',
            name: 'country',
            value: 'de'
          }, {
            label: 'es',
            name: 'country',
            value: 'es'
          }, {
            label: 'uk',
            name: 'country',
            value: 'uk'
          }, {
            label: 'no input'
          }, {
            label: 'bold',
            name: 'bold'
          }, {
            label: 'italic',
            name: 'italic'
          }, {
            label: 'strikethrough',
            name: 'strikethrough'
          }]
        }, {
          label: 'hello world 2'
        }]
      }), _react.default.createElement("h3", null, "simple and multiple selection"), _react.default.createElement(_src.default, {
        enableSelection: true,
        selected: this.state.selected,
        onSelectionChange: function onSelectionChange(newSelection) {
          _this2.setState({
            selected: newSelection
          });
        },
        items: [{
          label: 'ro',
          name: 'country',
          value: 'ro'
        }, {
          label: 'de',
          name: 'country',
          value: 'de'
        }, {
          label: 'es',
          name: 'country',
          value: 'es'
        }, {
          label: 'uk',
          name: 'country',
          value: 'uk'
        }, {
          label: 'no input'
        }, {
          label: 'bold',
          name: 'bold'
        }, {
          label: 'italic',
          name: 'italic'
        }, {
          label: 'strikethrough',
          name: 'strikethrough'
        }]
      }), _react.default.createElement("h3", null, "menu with custom inputs inside submenu"), _react.default.createElement(_src.default, {
        shadow: false,
        submenuAlignOffset: {
          x: -10,
          y: 10
        },
        submenuMaxHeight: 100,
        columns: ['label', 'check'],
        items: [{
          label: 'Bold',
          items: [{
            label: 'Bold',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Bold'] || false,
              value: "Bold",
              onChange: onChange
            })
          }, {
            label: 'Italic',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Italic'] || false,
              value: "Italic",
              onChange: onChange
            })
          }, {
            label: 'Underline',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Underline'] || false,
              value: "Underline",
              onChange: onChange
            })
          }, {
            label: 'Strikethrough',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Strikethrough'] || false,
              value: "Strikethrough",
              onChange: onChange
            })
          }, {
            label: 'Subscript',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Subscript'] || false,
              value: "Subscript",
              onChange: onChange
            })
          }, {
            label: 'Superscript',
            dismissOnClick: false,
            check: _react.default.createElement("input", {
              type: "checkbox",
              checked: this.state.checkState['Superscript'] || false,
              value: "Superscript",
              onChange: onChange
            })
          }]
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Strikethrough'
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h3", null, "meniu cu arrow scroll"), _react.default.createElement(_src.default, {
        enableKeyboardNavigation: true,
        maxHeight: 190,
        submenuMaxHeight: 175,
        columns: ['icon', {
          name: 'label',
          colspan: 10
        }],
        items: [{
          label: 'home 1'
        }, {
          label: 'home 2'
        }, {
          label: 'home 3'
        }, {
          label: 'New',
          icon: PREVIEW_ICON,
          items: [{
            label: 'Document',
            disabled: true
          }, {
            label: 'Spreadsheet'
          }, {
            label: 'Presentation'
          }, {
            label: 'Form'
          }, {
            label: 'Drawing',
            items: [{
              label: 'Document',
              disabled: true
            }, {
              label: 'Spreadsheet',
              disabled: true
            }, {
              label: 'Presentation',
              disabled: true,
              disabledStyle: {
                backgroundColor: 'red'
              }
            }, {
              label: 'Form',
              disabled: true
            }, {
              label: 'Drawing'
            }]
          }]
        }, {
          label: 'Options',
          disabled: true,
          items: [{
            label: 'Preview',
            icon: PREVIEW_ICON
          }, {
            label: 'Share'
          }, {
            label: 'Make a copy'
          }, {
            label: 'Download'
          }]
        }, {
          label: 'Format',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }, '-', {
            label: 'Clear Formatting'
          }]
        }, {
          label: 'Save'
        }, '-', {
          label: 'Export as',
          items: [{
            label: 'Text document'
          }, {
            label: 'PDF'
          }, {
            label: 'Open document text'
          }, {
            label: 'Rich text'
          }]
        }]
      }), _react.default.createElement("h3", null, "Complex menu with default theme"), _react.default.createElement(_src.default, {
        enableKeyboardNavigation: true,
        columns: ['icon', {
          name: 'label',
          colspan: 10
        }],
        items: [{
          label: 'home 1'
        }, {
          label: 'home 2'
        }, {
          label: 'home 3'
        }, {
          label: 'New',
          icon: PREVIEW_ICON,
          items: [{
            label: 'Document',
            disabled: true
          }, {
            label: 'Spreadsheet'
          }, {
            label: 'Presentation'
          }, {
            label: 'Form'
          }, {
            label: 'Drawing',
            items: [{
              label: 'Document',
              disabled: true
            }, {
              label: 'Spreadsheet',
              disabled: true
            }, {
              label: 'Presentation',
              disabled: true,
              disabledStyle: {
                backgroundColor: 'red'
              }
            }, {
              label: 'Form',
              disabled: true
            }, {
              label: 'Drawing'
            }]
          }]
        }, {
          label: 'Options',
          disabled: true,
          items: [{
            label: 'Preview',
            icon: PREVIEW_ICON
          }, {
            label: 'Share'
          }, {
            label: 'Make a copy'
          }, {
            label: 'Download'
          }]
        }, {
          label: 'Format',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }, '-', {
            label: 'Clear Formatting'
          }]
        }, {
          label: 'Save'
        }, '-', {
          label: 'Export as',
          items: [{
            label: 'Text document'
          }, {
            label: 'PDF'
          }, {
            label: 'Open document text'
          }, {
            label: 'Rich text'
          }]
        }, {
          label: 'Document'
        }]
      }), _react.default.createElement("h2", null, "without shadow"), _react.default.createElement(_src.default, {
        shadow: false,
        items: [{
          label: 'Bold'
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Strikethrough'
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h2", null, "offset ", 'x: -10, y: 10', " "), _react.default.createElement(_src.default, {
        shadow: false,
        submenuAlignOffset: {
          x: -10,
          y: 10
        },
        items: [{
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Strikethrough'
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h2", null, "Animation enabled "), _react.default.createElement(_src.default, {
        enableAnimation: true,
        items: [{
          label: 'home 1'
        }, {
          label: 'home 2'
        }, {
          label: 'home 3'
        }, {
          label: 'New',
          icon: PREVIEW_ICON,
          items: [{
            label: 'Document',
            disabled: true
          }, {
            label: 'Spreadsheet'
          }, {
            label: 'Presentation'
          }, {
            label: 'Form'
          }, {
            label: 'Drawing',
            items: [{
              label: 'Document',
              disabled: true
            }, {
              label: 'Spreadsheet',
              disabled: true
            }, {
              label: 'Presentation',
              disabled: true,
              disabledStyle: {
                backgroundColor: 'red'
              }
            }, {
              label: 'Form',
              disabled: true
            }, {
              label: 'Drawing'
            }]
          }]
        }, {
          label: 'Options',
          disabled: true,
          items: [{
            label: 'Preview',
            icon: PREVIEW_ICON
          }, {
            label: 'Share'
          }, {
            label: 'Make a copy'
          }, {
            label: 'Download'
          }]
        }, {
          label: 'Format',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }, '-', {
            label: 'Clear Formatting'
          }]
        }, {
          label: 'Save'
        }, '-', {
          label: 'Export as',
          items: [{
            label: 'Text document'
          }, {
            label: 'PDF'
          }, {
            label: 'Open document text'
          }, {
            label: 'Rich text'
          }]
        }]
      }), _react.default.createElement("h2", null, "Animation duration 1000ms "), _react.default.createElement(_src.default, {
        enableAnimation: true,
        fadeDuration: 1000,
        items: [{
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Strikethrough'
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h2", null, "show delay 300ms"), _react.default.createElement(_src.default, {
        showSubmenuDelay: 300,
        items: [{
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h2", null, "hide delay 300ms"), _react.default.createElement(_src.default, {
        hideSubmenuDelay: 300,
        items: [{
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Italic'
        }, {
          label: 'Underline'
        }, {
          label: 'Bold',
          items: [{
            label: 'Bold'
          }, {
            label: 'Italic'
          }, {
            label: 'Underline'
          }, {
            label: 'Strikethrough'
          }, {
            label: 'Subscript'
          }, {
            label: 'Superscript'
          }]
        }, {
          label: 'Subscript'
        }, {
          label: 'Superscript'
        }]
      }), _react.default.createElement("h2", null, "Context menu"), _react.default.createElement("div", {
        id: "constrainTo",
        style: {
          maxWidth: 300,
          minWidth: 300,
          marginRight: 30,
          border: '1px dashed blue',
          position: 'relative',
          height: 400
        },
        onContextMenu: this.onContextMenu
      }, _react.default.createElement("strong", null, "context menu with animation"), this.state.menuAlignTo && _react.default.createElement(_src.default, {
        enableRootAnimation: true,
        autoFocus: true,
        onDismiss: function onDismiss() {
          _this2.setState({
            menuAlignTo: null
          });
        },
        alignOffset: [3, {
          x: 5,
          y: 30
        }, 1],
        style: {
          position: 'fixed'
        },
        alignTo: {
          left: this.state.menuAlignTo.left,
          top: this.state.menuAlignTo.top,
          height: 1,
          width: 1
        },
        enableAnimation: true,
        constrainTo: '#constrainTo',
        alignPositions: ['tl-c', 'bl-c', 'br-c'],
        items: longListOfItemsWithStyle
      })));
    }
  }, {
    key: "onContextMenu",
    value: function onContextMenu(event) {
      event.preventDefault();
      this.setState({
        menuAlignTo: {
          left: event.clientX,
          top: event.clientY,
          width: 1,
          height: 1
        }
      });
    }
  }, {
    key: "handleChildClick",
    value: function handleChildClick() {
      console.log('child clicked!');
    }
  }, {
    key: "handleClick",
    value: function handleClick(itemProps) {
      console.log('clicked !!!', arguments);
    }
  }]);
  return App;
}(_reactClass.default);
(0, _reactDom.render)(_react.default.createElement(App, null), document.getElementById('content'));