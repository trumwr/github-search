/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
declare const getFormats: () => {
    YYYY: {
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleArrow: (format: any, { currentValue, key, dir }: {
            currentValue: any;
            key: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleUnidentified: (format: any, { event, currentValue, range }: {
            event: any;
            currentValue: any;
            range: any;
        }) => {
            preventDefault: boolean;
            value: any;
            caretPos?: undefined;
        } | {
            value: any;
            caretPos: {
                start: any;
            };
            preventDefault?: undefined;
        };
    };
    MM: {
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    DD: {
        min: number;
        max: number;
        default: string;
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    HH: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    H: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    kk: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    k: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    hh: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    h: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    a: {
        time: boolean;
        length: number;
        default: string;
        handleArrow: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageUp: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageDown: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handleDelete: (format: any, { dir, range }: {
            dir: any;
            range: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
    };
    A: {
        length: number;
        time: boolean;
        default: string;
        upper: boolean;
        handleArrow: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageUp: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageDown: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handleDelete: (format: any, { dir, range }: {
            dir: any;
            range: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
    };
    mm: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    ss: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
};
export { getFormats };
declare const _default: {
    YYYY: {
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleArrow: (format: any, { currentValue, key, dir }: {
            currentValue: any;
            key: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleUnidentified: (format: any, { event, currentValue, range }: {
            event: any;
            currentValue: any;
            range: any;
        }) => {
            preventDefault: boolean;
            value: any;
            caretPos?: undefined;
        } | {
            value: any;
            caretPos: {
                start: any;
            };
            preventDefault?: undefined;
        };
    };
    MM: {
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    DD: {
        min: number;
        max: number;
        default: string;
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    HH: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    H: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    kk: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    k: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    hh: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    h: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    a: {
        time: boolean;
        length: number;
        default: string;
        handleArrow: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageUp: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageDown: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handleDelete: (format: any, { dir, range }: {
            dir: any;
            range: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
    };
    A: {
        length: number;
        time: boolean;
        default: string;
        upper: boolean;
        handleArrow: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageUp: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handlePageDown: (format: any, { currentValue }: {
            currentValue: any;
        }) => {
            value: string;
            caretPos: boolean;
        };
        handleDelete: (format: any, { dir, range }: {
            dir: any;
            range: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: string;
            caretPos: {
                start: any;
            };
        };
    };
    mm: {
        min: number;
        max: number;
        default: string;
        time: boolean;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
    ss: {
        time: boolean;
        min: number;
        max: number;
        default: string;
        handleDelete: (format: any, { range, currentValue, dir }: {
            range: any;
            currentValue: any;
            dir: any;
        }) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleBackspace: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        } | {
            value: number;
            caretPos: {
                start: any;
            };
        };
        handleUnidentified: (format: any, config: any) => {
            value: any;
            caretPos: {
                start: any;
            } | undefined;
            preventDefault: boolean | undefined;
        };
        handleArrow: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageUp: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
        handlePageDown: (format: any, config: any) => {
            value: any;
            caretPos: boolean;
        };
    };
};
export default _default;
