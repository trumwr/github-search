/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
Object.defineProperty(exports, "getNewValue", {
  enumerable: true,
  get: function get() {
    return _getNewValue2.default;
  }
});
Object.defineProperty(exports, "getSelectionEnd", {
  enumerable: true,
  get: function get() {
    return _getSelectionEnd.default;
  }
});
Object.defineProperty(exports, "getSelectionStart", {
  enumerable: true,
  get: function get() {
    return _getSelectionStart.default;
  }
});
Object.defineProperty(exports, "setCaretPosition", {
  enumerable: true,
  get: function get() {
    return _setCaretPosition2.default;
  }
});
Object.defineProperty(exports, "toTimeValue", {
  enumerable: true,
  get: function get() {
    return _toTimeValue.default;
  }
});
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactClass = _interopRequireDefault(require("../../../react-class"));
var _raf = _interopRequireDefault(require("../../../../common/raf"));
var _assign = _interopRequireDefault(require("../../../../common/assign"));
var _Clock = _interopRequireDefault(require("../Clock"));
var _getSelectionStart = _interopRequireDefault(require("./getSelectionStart"));
var _getSelectionEnd = _interopRequireDefault(require("./getSelectionEnd"));
var _setCaretPosition2 = _interopRequireDefault(require("./setCaretPosition"));
var _getNewValue2 = _interopRequireDefault(require("./getNewValue"));
var _toTimeValue = _interopRequireDefault(require("./toTimeValue"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var TimeInput = function (_Component) {
  (0, _inherits2.default)(TimeInput, _Component);
  var _super = _createSuper(TimeInput);
  function TimeInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TimeInput);
    _this = _super.call(this, props);
    var format = props.format || props.timeFormat;
    _this.timeInputRef = (0, _react.createRef)();
    if (format.indexOf('hh') != 0 && format.indexOf('HH') != 0 && format.indexOf('kk') != 0) {
      console.warn('Please start your time format with 2 digit hours.');
    }
    var hours24 = true;
    var meridiem = format.indexOf('a') != -1 || format.indexOf('A') != -1;
    if (format.indexOf('hh') == 0 && format.indexOf('kk') == 0) {
      hours24 = false;
    }
    var separator = props.separator || format && format.length > 2 ? format.charAt(2) : ':';
    var hasSeconds = format.indexOf('ss') != -1;
    if (hasSeconds && format.charAt(5) != separator) {
      console.warn('Expected minutes-seconds separator to be same as hours-minutes separator. (at position 5)');
    }
    var defaultValue = "00".concat(separator, "00");
    if (hasSeconds) {
      defaultValue += "".concat(separator, "00");
    }
    if (meridiem) {
      defaultValue += ' am';
    }
    _this.state = {
      valueRange: props.valueRange || 0,
      separator: separator,
      hours24: hours24,
      meridiem: meridiem,
      value: props.defaultValue || defaultValue
    };
    return _this;
  }
  (0, _createClass2.default)(TimeInput, [{
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      props.value = this.state.value;
      return _react.default.createElement("input", _objectSpread(_objectSpread({}, props), {}, {
        ref: this.timeInputRef,
        defaultValue: undefined,
        value: props.value,
        onKeyDown: this.onKeyDown,
        onChange: this.onChange
      }));
    }
  }, {
    key: "onChange",
    value: function onChange(event) {
      var value = event.target.value;
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      var _this2 = this;
      var value = this.p.value;
      var valueRange = this.state.valueRange;
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
      var range = this.getSelectedRange();
      var separator = this.props.separator || this.state.separator || ':';
      var _getNewValue = (0, _getNewValue2.default)({
          range: range,
          event: event,
          circular: this.props.circular,
          propagate: this.props.propagate,
          oldValue: value,
          separator: separator,
          meridiem: this.state.meridiem,
          hours24: this.state.hours24,
          incrementNext: this.props.incrementNext
        }),
        newValue = _getNewValue.value,
        update = _getNewValue.update,
        caretPos = _getNewValue.caretPos;
      var updateCaretPos = function updateCaretPos() {
        if (caretPos != undefined) {
          _this2.setCaretPosition(caretPos);
        }
      };
      if (update || caretPos) {
        event.preventDefault();
      }
      if (update) {
        this.setValue(newValue, updateCaretPos);
      } else {
        (0, _raf.default)(updateCaretPos);
      }
    }
  }, {
    key: "getInput",
    value: function getInput() {
      return this.timeInputRef.current;
    }
  }, {
    key: "setCaretPosition",
    value: function setCaretPosition(pos) {
      var dom = this.getInput();
      dom && (0, _setCaretPosition2.default)(dom, pos);
    }
  }, {
    key: "setValue",
    value: function setValue(value, callback) {
      this.setState({
        now: Date.now(),
        value: value
      }, typeof callback == 'function' && callback);
      if (this.props.onChange) {
        this.props.onChange(value);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.updateCallback) {
        this.updateCallback();
        this.updateCallback = null;
      }
    }
  }, {
    key: "getSelectedRange",
    value: function getSelectedRange() {
      var dom = this.getInput();
      return {
        start: (0, _getSelectionStart.default)(dom),
        end: (0, _getSelectionEnd.default)(dom)
      };
    }
  }, {
    key: "getSelectedValue",
    value: function getSelectedValue() {
      var range = this.getSelectedRange();
      var value = this.p.value;
      return value.substring(range.start, range.end);
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value) {
      var time = value.split(':');
      this.setState({
        minutes: time[0] * 60 + time[1]
      });
    }
  }, {
    key: "renderClock",
    value: function renderClock() {
      var props = this.p;
      var clock = props.children.filter(function (child) {
        return child && child.props && child.props.isTimePickerClock;
      })[0];
      var clockProps = {
        time: this.state.minutes || props.date,
        showSecondsHand: true
      };
      if (clock) {
        return _react.default.cloneElement(clock, clockProps);
      }
      return _react.default.createElement(_Clock.default, _objectSpread({}, clockProps));
    }
  }]);
  return TimeInput;
}(_reactClass.default);
exports.default = TimeInput;
TimeInput.defaultProps = {
  theme: 'default',
  circular: true,
  propagate: true,
  incrementNext: true
};
TimeInput.propTypes = {
  theme: _propTypes.default.string,
  circular: _propTypes.default.bool,
  propagate: _propTypes.default.bool,
  incrementNext: _propTypes.default.bool,
  format: _propTypes.default.string,
  value: function value(props, propName) {
    if (props[propName] !== undefined) {
      console.warn('Due to performance considerations, TimeInput will only be uncontrolled.');
    }
  }
};