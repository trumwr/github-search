/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NAV_KEYS", {
  enumerable: true,
  get: function get() {
    return _MonthView.NAV_KEYS;
  }
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactClass = _interopRequireDefault(require("../../react-class"));
var _Flex = require("../../Flex");
var _assign = _interopRequireDefault(require("../../../common/assign"));
var _join = _interopRequireDefault(require("../../../common/join"));
var _assignDefined = _interopRequireDefault(require("./assignDefined"));
var _MonthView = _interopRequireWildcard(require("./MonthView"));
var _toMoment = _interopRequireDefault(require("./toMoment"));
var _ClockInput = _interopRequireDefault(require("./ClockInput"));
var _forwardTime = _interopRequireDefault(require("./utils/forwardTime"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var hasTime = function hasTime(dateFormat) {
  dateFormat = dateFormat ? dateFormat.toLowerCase() : '';
  return dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;
};
var Calendar = function (_Component) {
  (0, _inherits2.default)(Calendar, _Component);
  var _super = _createSuper(Calendar);
  function Calendar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Calendar);
    _this = _super.call(this, props);
    _this.state = {
      timeFocused: false
    };
    return _this;
  }
  (0, _createClass2.default)(Calendar, [{
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.view ? this.view.getDOMNode() : null;
    }
  }, {
    key: "prepareDate",
    value: function prepareDate(props) {
      return (0, _toMoment.default)(props.date, props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.p = (0, _assign.default)({}, this.props);
      var dateFormat = props.dateFormat.toLowerCase();
      props.date = this.prepareDate(props);
      if (props.showClock === undefined) {
        props.showClock = dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;
      }
      var startTimeIndex = dateFormat.toLowerCase().indexOf('h');
      if (startTimeIndex === -1) {
        startTimeIndex = dateFormat.toLowerCase().indexOf('k');
      }
      var timeFormat = dateFormat.substring(startTimeIndex);
      props.timeFormat = timeFormat;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var monthViewProps = (0, _assign.default)({}, this.props);
      var keys = monthViewProps.date / 7;
      delete monthViewProps.onTimeChange;
      delete monthViewProps.updateOnWheel;
      delete monthViewProps.wrapTime;
      delete monthViewProps.rootClassName;
      delete monthViewProps.showClock;
      if (typeof this.props.cleanup == 'function') {
        this.props.cleanup(monthViewProps);
      }
      var monthView = _react.default.createElement(_MonthView.default, _objectSpread(_objectSpread({}, monthViewProps), {}, {
        onChange: this.onChange,
        className: null,
        style: null,
        ref: function ref(view) {
          _this2.view = view;
        },
        renderChildren: this.renderChildren,
        showClock: props.showClock
      }));
      return _react.default.createElement(_Flex.Flex, {
        inline: true,
        row: true,
        wrap: false,
        className: className,
        style: props.style
      }, monthView);
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      if (this.view && this.view.isMonthDecadeViewVisible) {
        return this.view.isMonthDecadeViewVisible();
      }
      return false;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 3),
        navBar = _ref2[0],
        inner = _ref2[1],
        footer = _ref2[2];
      var props = this.p;
      var clockInput = props.showClock ? this.renderClockInput() : null;
      return _react.default.createElement(_Flex.Flex, {
        key: "date_picker_comp",
        column: true,
        wrap: false,
        alignItems: "stretch"
      }, [navBar ? _react.default.cloneElement(navBar, {
        key: 'calendar_navBar'
      }) : null, _react.default.createElement(_Flex.Flex, {
        key: "calendar_inner",
        justifyContent: "center",
        wrap: this.props.wrap || this.props.wrapTime
      }, _react.default.createElement(_Flex.Flex, {
        flexGrow: "1",
        flexShrink: "0",
        flexBasis: "auto",
        column: true,
        wrap: false,
        alignItems: "stretch",
        children: inner
      }), clockInput), footer ? _react.default.cloneElement(footer, {
        key: 'calendar_footer'
      }) : null]);
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.view) {
        this.view.focus();
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      if (this.view) {
        return this.view.isFocused();
      }
      return false;
    }
  }, {
    key: "onViewKeyDown",
    value: function onViewKeyDown() {
      if (this.view) {
        var _this$view;
        (_this$view = this.view).onViewKeyDown.apply(_this$view, arguments);
      }
    }
  }, {
    key: "isTimeInputFocused",
    value: function isTimeInputFocused() {
      return this.state.timeFocused;
    }
  }, {
    key: "renderClockInput",
    value: function renderClockInput() {
      var _this3 = this,
        _clockInputProps;
      var clockInput = null;
      var readOnly = this.props.readOnly;
      var clockInputProps = (_clockInputProps = {
        ref: function ref(clkInput) {
          _this3.clockInput = clkInput;
        },
        theme: this.props.theme,
        viewIndex: this.props.viewIndex,
        dateFormat: this.p.dateFormat
      }, (0, _defineProperty2.default)(_clockInputProps, readOnly ? 'value' : 'defaultValue', this.p.date), (0, _defineProperty2.default)(_clockInputProps, "onFocus", this.onClockInputFocus), (0, _defineProperty2.default)(_clockInputProps, "onBlur", this.onClockInputBlur), (0, _defineProperty2.default)(_clockInputProps, "onChange", this.onTimeChange), (0, _defineProperty2.default)(_clockInputProps, "onMouseDown", this.onClockInputMouseDown), _clockInputProps);
      (0, _assignDefined.default)(clockInputProps, {
        onEnterKey: this.props.onClockEnterKey,
        onEscapeKey: this.props.onClockEscapeKey,
        readOnly: readOnly,
        tabIndex: readOnly ? null : this.props.clockTabIndex,
        theme: this.props.theme,
        updateOnWheel: this.props.updateOnWheel
      });
      if (clockInput) {
        return _react.default.cloneElement(clockInput, clockInputProps);
      }
      return _react.default.createElement(_ClockInput.default, _objectSpread({}, clockInputProps));
    }
  }, {
    key: "onClockInputFocus",
    value: function onClockInputFocus() {
      this.setState({
        timeFocused: true
      });
      this.props.onClockInputFocus();
    }
  }, {
    key: "onClockInputBlur",
    value: function onClockInputBlur() {
      this.setState({
        timeFocused: false
      });
      this.props.onClockInputBlur();
    }
  }, {
    key: "onClockInputMouseDown",
    value: function onClockInputMouseDown(event) {
      event.stopPropagation();
      if (event.target && event.target.type != 'text') {
        event.preventDefault();
      }
      this.clockInput.focus();
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value, timeFormat) {
      this.time = value;
      this.props.onTimeChange(value, timeFormat);
      var view = this.view;
      var moment = view.p.moment;
      if (moment == null) {
        return;
      }
      if (this.props.triggerChangeOnTimeChange) {
        view.onChange({
          dateMoment: moment,
          timestamp: +moment,
          noCollapse: this.props.triggerChangeOnTimeChange
        });
      }
    }
  }, {
    key: "onChange",
    value: function onChange(dateString, _ref3, event) {
      var dateMoment = _ref3.dateMoment,
        timestamp = _ref3.timestamp,
        noCollapse = _ref3.noCollapse;
      var props = this.p;
      if (props.showClock) {
        var time = (0, _toMoment.default)(this.time || this.clockInput.getValue(), {
          dateFormat: props.timeFormat,
          locale: props.locale
        });
        (0, _forwardTime.default)(time, dateMoment);
        timestamp = +dateMoment;
        dateString = this.view.format(dateMoment);
      } else if (hasTime(props.dateFormat)) {
        (0, _forwardTime.default)(props.date, dateMoment);
        timestamp = +dateMoment;
        dateString = this.view.format(dateMoment);
      }
      if (this.props.onChange) {
        this.props.onChange(dateString, {
          dateMoment: dateMoment,
          timestamp: timestamp,
          dateString: dateString,
          noCollapse: noCollapse
        }, event);
      }
    }
  }]);
  return Calendar;
}(_reactClass.default);
exports.default = Calendar;
Calendar.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__calendar',
  dateFormat: 'YYYY-MM-DD',
  theme: 'default-light',
  isDatePicker: true,
  triggerChangeOnTimeChange: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300,
  wrapTime: false,
  onTimeChange: function onTimeChange() {},
  onClockEnterKey: function onClockEnterKey() {},
  onClockInputBlur: function onClockInputBlur() {},
  onClockInputFocus: function onClockInputFocus() {},
  onFooterTodayClick: function onFooterTodayClick() {},
  onFooterCancelClick: function onFooterCancelClick() {},
  onFooterClearClick: function onFooterClearClick() {},
  onFooterOkClick: function onFooterOkClick() {}
};
Calendar.propTypes = {
  rootClassName: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  theme: _propTypes.default.string,
  clockTabIndex: _propTypes.default.number,
  updateOnWheel: _propTypes.default.bool,
  isDatePicker: _propTypes.default.bool,
  wrap: _propTypes.default.bool,
  wrapTime: _propTypes.default.bool,
  viewIndex: _propTypes.default.number,
  showClock: _propTypes.default.bool,
  onTimeChange: _propTypes.default.func,
  onClockEnterKey: _propTypes.default.func,
  onClockInputBlur: _propTypes.default.func,
  onClockInputFocus: _propTypes.default.func,
  onFooterTodayClick: _propTypes.default.func,
  onFooterCancelClick: _propTypes.default.func,
  onFooterClearClick: _propTypes.default.func,
  onClockInputMouseDown: _propTypes.default.func,
  onClockEscapeKey: _propTypes.default.func,
  onFooterOkClick: _propTypes.default.func,
  onChange: _propTypes.default.func,
  cleanup: _propTypes.default.func,
  triggerChangeOnTimeChange: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number,
  enableMonthDecadeViewAnimation: _propTypes.default.bool
};