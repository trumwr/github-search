/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FooterButton = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactClass = _interopRequireDefault(require("../../react-class"));
var _Flex = require("../../Flex");
var _Button = _interopRequireDefault(require("../../Button"));
var _assign = _interopRequireDefault(require("../../../common/assign"));
var _join = _interopRequireDefault(require("../../../common/join"));
var _joinFunctions = _interopRequireDefault(require("./joinFunctions"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var numbers = [1];
var SPACER = numbers.map(function (item, index) {
  return _react.default.createElement(_Flex.Item, {
    key: "footer_spacer_".concat(index * 37)
  });
});
var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};
var FooterButton = function FooterButton(props) {
  var disabledClassName = props.disabled ? "".concat(props.rootClassName, "-button--disabled") : '';
  var cancelButtonClass = props.children === 'Cancel' ? "".concat(props.rootClassName, "-button-cancel") : '';
  var todayButtonClass = props.children === 'Today' ? "".concat(props.rootClassName, "-button-today") : '';
  var okButtonClass = props.children === 'OK' ? "".concat(props.rootClassName, "-button-ok") : '';
  var className = (0, _join.default)(props.className || '', cancelButtonClass, todayButtonClass, okButtonClass, "".concat(props.rootClassName, "-button"), disabledClassName);
  var buttonProps = _objectSpread({}, props);
  delete buttonProps.rootClassName;
  return _react.default.createElement(_Button.default, _objectSpread(_objectSpread({
    tabIndex: -1
  }, buttonProps), {}, {
    className: className
  }));
};
exports.FooterButton = FooterButton;
var Footer = function (_Component) {
  (0, _inherits2.default)(Footer, _Component);
  var _super = _createSuper(Footer);
  function Footer() {
    (0, _classCallCheck2.default)(this, Footer);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Footer, [{
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, "".concat(rootClassName, "--theme-").concat(props.theme), "".concat(rootClassName, "--button-cancel"));
      var todayButton = this.renderTodayButton();
      var clearButton = this.renderClearButton();
      var okButton = this.renderOkButton();
      var cancelButton = this.renderCancelButton();
      if (!todayButton && !clearButton && !okButton && !cancelButton) {
        return null;
      }
      var middleSpacer = okButton || cancelButton ? SPACER : null;
      var spacer = !props.centerButtons ? middleSpacer : null;
      var children = [props.centerButtons && SPACER, todayButton, clearButton, spacer, okButton, cancelButton, props.centerButtons && SPACER];
      if (props.renderChildren) {
        children = props.renderChildren(children, props);
      }
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.rootClassName;
      delete flexProps.actionEvent;
      delete flexProps.buttonFactory;
      delete flexProps.cancelButton;
      delete flexProps.cancelButtonText;
      delete flexProps.centerButtons;
      delete flexProps.clearDate;
      delete flexProps.cleanup;
      delete flexProps.clearButton;
      delete flexProps.clearButtonText;
      delete flexProps.isDatePickerFooter;
      delete flexProps.onCancelClick;
      delete flexProps.onClearClick;
      delete flexProps.onOkClick;
      delete flexProps.onTodayClick;
      delete flexProps.okButton;
      delete flexProps.okButtonText;
      delete flexProps.selectDate;
      delete flexProps.theme;
      delete flexProps.todayButton;
      delete flexProps.todayButtonText;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        key: "footer",
        inline: true,
        row: true
      }, flexProps), {}, {
        justifyContent: "center",
        className: className,
        children: children
      }));
    }
  }, {
    key: "renderTodayButton",
    value: function renderTodayButton() {
      if (!this.props.todayButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.todayButtonText,
        'data-name': 'today-button'
      }, this.props.onTodayClick, theme);
    }
  }, {
    key: "renderClearButton",
    value: function renderClearButton() {
      if (!this.props.clearButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.clearButtonText,
        disabled: this.props.clearDate === undefined,
        'data-name': 'clear-button'
      }, this.props.onClearClick, theme);
    }
  }, {
    key: "renderOkButton",
    value: function renderOkButton() {
      if (!this.props.okButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.okButtonText,
        'data-name': 'ok-button'
      }, this.props.onOkClick, theme);
    }
  }, {
    key: "renderCancelButton",
    value: function renderCancelButton() {
      if (!this.props.cancelButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.cancelButtonText,
        'data-name': 'cancel-button'
      }, this.props.onCancelClick, theme);
    }
  }, {
    key: "renderButton",
    value: function renderButton(props, fn, theme) {
      var text = props.children;
      var p = props;
      if (typeof props == 'string') {
        p = {};
        text = props;
      }
      if (typeof fn == 'function' && !p.onClick && !p.disabled) {
        p.onClick = fn;
      }
      var Factory = this.props.buttonFactory;
      var onMouseDown = p.onMouseDown ? (0, _joinFunctions.default)(p.onMouseDown, preventDefault) : preventDefault;
      return _react.default.createElement(Factory, _objectSpread(_objectSpread({
        key: "footer_".concat(text),
        tabIndex: 0
      }, p), {}, {
        rootClassName: this.props.rootClassName,
        onMouseDown: onMouseDown,
        theme: theme
      }), text);
    }
  }]);
  return Footer;
}(_reactClass.default);
exports.default = Footer;
Footer.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__footer',
  actionEvent: 'onClick',
  theme: 'default',
  buttonFactory: FooterButton,
  todayButton: true,
  clearButton: false,
  okButton: true,
  cancelButton: true,
  todayButtonText: 'Today',
  clearButtonText: 'Clear',
  okButtonText: 'OK',
  cancelButtonText: 'Cancel',
  isDatePickerFooter: true
};
Footer.propTypes = {
  isDatePickerFooter: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  actionEvent: _propTypes.default.string,
  centerButtons: _propTypes.default.bool,
  buttonFactory: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  clearDate: _propTypes.default.object,
  okButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  clearButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  cancelButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  todayButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  todayButton: _propTypes.default.bool,
  clearButton: _propTypes.default.bool,
  okButton: _propTypes.default.bool,
  cancelButton: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  onTodayClick: _propTypes.default.func,
  onClearClick: _propTypes.default.func,
  onOkClick: _propTypes.default.func,
  onCancelClick: _propTypes.default.func,
  renderChildren: _propTypes.default.func,
  cleanup: _propTypes.default.func
};