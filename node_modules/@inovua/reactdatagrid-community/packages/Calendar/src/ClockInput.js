/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _autoBind = _interopRequireDefault(require("../../react-class/autoBind"));
var _Flex = require("../../Flex");
var _throttle = _interopRequireDefault(require("../../../common/throttle"));
var _assign = _interopRequireDefault(require("../../../common/assign"));
var _join = _interopRequireDefault(require("../../../common/join"));
var _toMoment = _interopRequireDefault(require("./toMoment"));
var _Clock = _interopRequireDefault(require("./Clock"));
var _DateFormatSpinnerInput = _interopRequireDefault(require("./DateFormatSpinnerInput"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ClockInput = function (_Component) {
  (0, _inherits2.default)(ClockInput, _Component);
  var _super = _createSuper(ClockInput);
  function ClockInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ClockInput);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    var delay = props.changeDelay;
    _this.throttleSetValue = delay == -1 ? _this.setValue : (0, _throttle.default)(_this.setValue, delay);
    _this.state = {
      value: props.defaultValue || Date.now()
    };
    return _this;
  }
  (0, _createClass2.default)(ClockInput, [{
    key: "getValue",
    value: function getValue() {
      return this.value;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var format = props.dateFormat || props.format;
      var startIndex = format.toLowerCase().indexOf('h');
      if (startIndex === -1) {
        startIndex = format.toLowerCase().indexOf('k');
      }
      var dateFormat = format.substring(startIndex);
      this.dateFormat = dateFormat;
      this.value = props.value !== undefined ? props.value : this.state.value;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var flexProps = (0, _assign.default)({}, this.props);
      delete flexProps.changeDelay;
      delete flexProps.cleanup;
      delete flexProps.dateFormat;
      delete flexProps.isClockInput;
      delete flexProps.onEnterKey;
      delete flexProps.onEscapeKey;
      delete flexProps.onTimeChange;
      delete flexProps.updateOnWheel;
      delete flexProps.theme;
      delete flexProps.viewIndex;
      delete flexProps.wrapTime;
      delete flexProps.rootClassName;
      if (typeof this.props.cleanup == 'function') {
        this.props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        column: true
      }, flexProps), {}, {
        value: null,
        defaultValue: null,
        className: className
      }), this.renderClock(), this.renderTimeInput());
    }
  }, {
    key: "renderTimeInput",
    value: function renderTimeInput() {
      var _this2 = this;
      var props = this.props;
      var dateInput = _react.default.Children.toArray(props.children).filter(function (child) {
        return child && child.props && child.props.isDateInput;
      })[0];
      var dateInputProps = (0, _assign.default)({}, this.props, {
        ref: function ref(field) {
          _this2.field = field;
        },
        tabIndex: props.readOnly ? -1 : props.tabIndex || 0,
        readOnly: props.readOnly,
        value: this.value,
        dateFormat: this.dateFormat,
        onChange: this.onChange,
        onKeyDown: this.onKeyDown,
        size: props.size || this.dateFormat.length + 2,
        theme: props.theme
      });
      if (dateInput) {
        return _react.default.cloneElement(dateInput, dateInputProps);
      }
      return _react.default.createElement(_DateFormatSpinnerInput.default, _objectSpread(_objectSpread({}, dateInputProps), {}, {
        style: null
      }));
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.field) {
        this.field.focus();
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      if (this.props.onEnterKey && event.key == 'Enter') {
        this.props.onEnterKey(event);
      }
      if (this.props.onEscapeKey && event.key == 'Escape') {
        this.props.onEscapeKey(event);
      }
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      if (this.props.value === undefined) {
        this.setState({
          value: value
        });
      }
      if (this.props.onChange) {
        this.throttleSetValue(value);
      }
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      if (this.props.value === undefined) {
        this.setState({
          value: value
        });
      }
      if (this.props.onChange) {
        this.props.onChange(value, this.dateFormat);
      }
    }
  }, {
    key: "renderClock",
    value: function renderClock() {
      var props = this.props;
      var clock = _react.default.Children.toArray(props.children).filter(function (child) {
        return child && child.props && child.props.isDatePickerClock;
      })[0];
      var dateFormat = this.dateFormat;
      var time = (0, _toMoment.default)(this.value, {
        dateFormat: dateFormat
      });
      var clockProps = {
        time: time,
        theme: props.theme,
        showMinutesHand: dateFormat.indexOf('mm') != -1,
        showSecondsHand: dateFormat.indexOf('ss') != -1
      };
      if (clock) {
        return _react.default.cloneElement(clock, clockProps);
      }
      return _react.default.createElement(_Clock.default, _objectSpread({}, clockProps));
    }
  }]);
  return ClockInput;
}(_react.Component);
exports.default = ClockInput;
ClockInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__clock-input',
  changeDelay: 50,
  dateFormat: 'YYYY-MM-DD',
  updateOnWheel: true,
  theme: 'default',
  wrapTime: false,
  isClockInput: true,
  onTimeChange: function onTimeChange() {}
};
ClockInput.propTypes = {
  rootClassName: _propTypes.default.string,
  value: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  defaultValue: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  viewIndex: _propTypes.default.number,
  dateFormat: _propTypes.default.string,
  format: _propTypes.default.string,
  theme: _propTypes.default.string,
  changeDelay: _propTypes.default.number,
  updateOnWheel: _propTypes.default.bool,
  wrapTime: _propTypes.default.bool,
  isClockInput: _propTypes.default.bool,
  cleanup: _propTypes.default.func,
  onEnterKey: _propTypes.default.func,
  onEscapeKey: _propTypes.default.func,
  onTimeChange: _propTypes.default.func
};