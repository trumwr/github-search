/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
import moment from 'moment';
import Component from '../../../react-class';
export default class DateInput extends Component {
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    handleClick(event: any): void;
    renderInput(): any;
    renderClearIcon(): any;
    onClearClick(event: any): void;
    renderCalendarIcon(): any;
    onCalendarIconMouseDown(event: any): void;
    prepareExpanded(props: any): any;
    prepareDate(props: any, pickerProps: any): {
        viewDate: any;
        activeDate: any;
        dateFormat: any;
        locale: any;
        valid: boolean;
        date: moment.Moment;
        value: any;
    };
    preparePickerProps(props: any): any;
    prepareProps(thisProps: any): any;
    prepareClassName(props: any): string;
    prepareInputProps(props: any): any;
    renderPicker(): any;
    getValue(): any;
    onTimeChange(value: any, timeFormat: any): void;
    getTime(): any;
    setValue(value: any, config?: {}): void;
    onFooterOkClick(): void;
    onFooterCancelClick(): void;
    onFooterTodayClick(): boolean;
    onFooterClearClick(): boolean;
    toMoment(value: any, props: any): moment.Moment;
    isValid(text: any): boolean;
    onViewDateChange(viewDate: any): void;
    setViewDate(viewDate: any): void;
    onActiveDateChange(activeDate: any): void;
    onViewKeyDown(event: any): void;
    onPickerViewKeyDown(event: any): void;
    onPickerMouseDown(event: any): void;
    isMonthDecadeViewVisible(): any;
    onFieldKeyDown(event: any): boolean;
    getInput(): any;
    isFocused(): any;
    isLazyFocused(): any;
    isTimeInputFocused(): any;
    onFieldFocus(event: any): void;
    onFieldBlur(event: any): void;
    onClockEnterKey(): void;
    onClockEscapeKey(): void;
    onClockInputBlur(): void;
    onLazyBlur(): void;
    onInputChange(): void;
    isExpanded(): any;
    toggleExpand(): void;
    setExpanded(bool: any): void;
    onCollapse(): void;
    onExpand(): void;
    onFieldChange(value: any): void;
    onTextChange(text: any): void;
    onPickerChange(dateString: any, { dateMoment, forceUpdate, noCollapse }: {
        dateMoment: any;
        forceUpdate: any;
        noCollapse: any;
    }, event: any): void;
    setDate(dateString: any, { dateMoment, skipTime }: {
        dateMoment: any;
        skipTime?: boolean | undefined;
    }): void;
    onChange(dateMoment: any): void;
    format(mom: any, format: any): any;
    focusField(): void;
    focus(): void;
}
