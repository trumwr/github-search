/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
import Component from '../../react-class';
export declare const renderNavBar: (config: any, navBarProps: any) => JSX.Element;
export default class MultiMonthView extends Component {
    constructor(props: any);
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: any) => void;
    updateToMoment(props: any): void;
    prepareProps(thisProps: any, state: any): any;
    render(): JSX.Element;
    renderRow(rowIndex: any): JSX.Element;
    renderView(viewProps: any, index: any, size: any, keys: any): JSX.Element;
    onFooterTodayClick(): void;
    onFooterClearClick(): void;
    onFooterOkClick(): void;
    onFooterCancelClick(): void;
    isFocused(): any;
    focus(): void;
    setHoverRange(hoverRange: any): void;
    select({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): void;
    selectRange({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    onRangeChange(range: any): void;
    onViewKeyDown(...args: any[]): void;
    renderNavBar(config: any, navBarProps: any): JSX.Element;
    onMonthNavigate(index: any, dir: any, event: any, getNavigationDate: any): void;
    onAdjustViewDateChange({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    updateViewMoment(dateMoment: any, dir: any): any;
    renderHiddenNav(props: any): JSX.Element;
    isInRange(moment: any): any;
    isInView(moment: any): any;
    onNavViewDateChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    onViewDateChange({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    onActiveDateChange({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    gotoViewDate({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    format(mom: any): any;
    onChange({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): void;
    getViewSize(): any;
}
