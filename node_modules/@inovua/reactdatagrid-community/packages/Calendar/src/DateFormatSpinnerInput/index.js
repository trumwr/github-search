/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactClass = _interopRequireDefault(require("../../../react-class"));
var _Flex = require("../../../Flex");
var _DateFormatInput = _interopRequireDefault(require("../DateFormatInput"));
var _assign = _interopRequireDefault(require("../../../../common/assign"));
var _joinFunctions = _interopRequireDefault(require("../joinFunctions"));
var _assignDefined = _interopRequireDefault(require("../assignDefined"));
var _join = _interopRequireDefault(require("../../../../common/join"));
var _getGlobal = require("../../../../getGlobal");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var DateFormatSpinnerInput = function (_Component) {
  (0, _inherits2.default)(DateFormatSpinnerInput, _Component);
  var _super = _createSuper(DateFormatSpinnerInput);
  function DateFormatSpinnerInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateFormatSpinnerInput);
    _this = _super.call(this, props);
    _this.state = {
      focused: false
    };
    _this.input = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(DateFormatSpinnerInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.started = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.started = false;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var rootClassName = props.rootClassName;
      var children = _react.default.Children.toArray(props.children);
      var input = this.inputChild = children.filter(function (c) {
        return c && c.type == 'input';
      })[0];
      var inputProps = input ? (0, _assign.default)({}, input.props) : {};
      var onKeyDown = (0, _joinFunctions.default)(props.onKeyDown, inputProps.onKeyDown);
      var onChange = (0, _joinFunctions.default)(props.onChange, inputProps.onChange);
      var disabled = props.disabled || inputProps.disabled;
      (0, _assignDefined.default)(inputProps, {
        size: props.size || inputProps.size,
        minDate: props.minDate || inputProps.minDate,
        maxDate: props.maxDate || inputProps.maxDate,
        changeDelay: props.changeDelay === undefined ? inputProps.changeDelay : props.changeDelay,
        tabIndex: props.tabIndex,
        onKeyDown: onKeyDown,
        onChange: onChange,
        disabled: disabled,
        dateFormat: props.dateFormat === undefined ? inputProps.dateFormat : props.dateFormat,
        stopPropagation: props.stopPropagation,
        updateOnWheel: props.updateOnWheel,
        onBlur: this.onBlur,
        onFocus: this.onFocus
      });
      this.inputProps = inputProps;
      var arrowSize = this.props.arrowSize;
      this.arrows = {
        1: _react.default.createElement("svg", {
          height: arrowSize / 2,
          width: arrowSize,
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M5.262.262l4.106 4.106c.144.144.144.379 0 .524-.07.069-.164.108-.262.108H.894c-.204 0-.37-.166-.37-.37 0-.099.039-.193.108-.262L4.738.262c.145-.145.38-.145.524 0z"
        })),
        '-1': _react.default.createElement("svg", {
          height: arrowSize / 2,
          width: arrowSize,
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M4.738 4.738L.632.632C.488.488.488.253.632.108.702.04.796 0 .894 0h8.212c.204 0 .37.166.37.37 0 .099-.039.193-.108.262L5.262 4.738c-.145.145-.38.145-.524 0z"
        }))
      };
      var className = (0, _join.default)(props.className, rootClassName, this.state.focused ? "".concat(rootClassName, "-spinner--focused") : "".concat(rootClassName, "-spinner"), disabled && "".concat(rootClassName, "--disabled"), this.isFocused() && "".concat(rootClassName, "--focused"), "".concat(rootClassName, "--theme-").concat(props.theme));
      return _react.default.createElement(_Flex.Flex, {
        inline: true,
        row: true,
        className: className,
        disabled: props.disabled
      }, _react.default.createElement(_DateFormatInput.default, _objectSpread({
        ref: this.input,
        theme: props.theme,
        value: props.value
      }, inputProps)), this.renderArrows());
    }
  }, {
    key: "renderArrows",
    value: function renderArrows() {
      if (this.props.renderArrows) {
        return this.props.renderArrows(this.props);
      }
      return _react.default.createElement("div", {
        className: "".concat(this.props.rootClassName, "-spinner-arrow-wrapper")
      }, this.renderArrow(1), this.renderArrow(-1));
    }
  }, {
    key: "renderArrow",
    value: function renderArrow(dir) {
      var rootClassName = this.props.rootClassName;
      var direction = dir === 1 ? 'up' : 'down';
      var className = (0, _join.default)("".concat(rootClassName, "-spinner-arrow"), "".concat(rootClassName, "-spinner-arrow--").concat(direction));
      return _react.default.createElement("div", {
        className: className,
        onMouseDown: this.onMouseDown.bind(this, dir),
        onMouseUp: this.stop,
        onMouseLeave: this.stop
      }, this.arrows[dir]);
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(dir, event) {
      var _this2 = this;
      if (this.props.disabled) {
        event.preventDefault();
        return;
      }
      event.preventDefault();
      if (this.isFocused()) {
        this.start(dir);
      } else {
        this.focus();
        setTimeout(function () {
          _this2.increment(dir);
        }, 1);
      }
    }
  }, {
    key: "start",
    value: function start(dir) {
      var _this3 = this;
      this.started = true;
      this.startTime = Date.now();
      this.step(dir);
      this.timeoutId = setTimeout(function () {
        _this3.step(dir);
        _this3.timeoutId = setTimeout(function () {
          var lazyStep = function lazyStep() {
            var delay = _this3.props.stepDelay - (Date.now() - _this3.startTime) / 500;
            _this3.step(dir, lazyStep, delay);
          };
          lazyStep();
        }, _this3.props.secondStepDelay);
      }, this.props.firstStepDelay);
    }
  }, {
    key: "isStarted",
    value: function isStarted() {
      return !!(this.started && this.input);
    }
  }, {
    key: "increment",
    value: function increment(dir) {
      if (this.input && this.input.current) {
        this.input.current.onDirection(dir);
      }
    }
  }, {
    key: "step",
    value: function step(dir, callback, delay) {
      var _this4 = this;
      if (this.isStarted()) {
        this.increment(dir);
        if (typeof callback == 'function') {
          this.timeoutId = setTimeout(function () {
            if (_this4.isStarted()) {
              callback();
            }
          }, delay === undefined ? this.props.stepDelay : delay);
        }
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      this.started = false;
      if (this.timeoutId) {
        globalObject.clearTimeout(this.timeoutId);
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.input && this.input.current) {
        this.input.current.focus();
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      var props = this.props;
      var onBlur = (0, _joinFunctions.default)(props.onBlur, this.inputChild && this.inputChild.props && this.inputChild.props.onBlur);
      if (onBlur) {
        onBlur(event);
      }
      this.setState({
        focused: false
      });
    }
  }, {
    key: "onFocus",
    value: function onFocus(event) {
      var props = this.props;
      var onFocus = (0, _joinFunctions.default)(props.onFocus, this.inputChild && this.inputChild.props && this.inputChild.props.onFocus);
      if (onFocus) {
        onFocus(event);
      }
      this.setState({
        focused: true
      });
    }
  }]);
  return DateFormatSpinnerInput;
}(_reactClass.default);
exports.default = DateFormatSpinnerInput;
DateFormatSpinnerInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__date-format-spinner',
  firstStepDelay: 150,
  secondStepDelay: 100,
  stepDelay: 50,
  changeDelay: undefined,
  theme: 'default',
  disabled: false,
  arrowSize: 10,
  isDateInput: true,
  stopPropagation: true,
  updateOnWheel: true
};
DateFormatSpinnerInput.propTypes = {
  rootClassName: _propTypes.default.string,
  firstStepDelay: _propTypes.default.number,
  secondStepDelay: _propTypes.default.number,
  stepDelay: _propTypes.default.number,
  changeDelay: _propTypes.default.number,
  theme: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  arrowSize: _propTypes.default.number,
  isDateInput: _propTypes.default.bool,
  stopPropagation: _propTypes.default.bool,
  updateOnWheel: _propTypes.default.bool
};