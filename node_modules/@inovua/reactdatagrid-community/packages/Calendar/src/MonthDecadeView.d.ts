/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
import Component from '../../react-class';
export default class MonthDecadeView extends Component {
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    toMoment(date: any, format: any): import("moment").Moment;
    render(): JSX.Element;
    renderFooter(): JSX.Element | null;
    onOkClick(): void;
    onCancelClick(): void;
    renderYearView(yearViewProps: any): JSX.Element;
    renderDecadeView(decadeViewProps: any): JSX.Element;
    onYearViewFocus(): void;
    focus(): void;
    getDOMNode(): any;
    onYearViewMouseDown(e: any): void;
    onDecadeViewMouseDown(e: any): void;
    format(mom: any, format: any): any;
    handleDecadeViewOnConfirm(): void;
    onKeyDown(event: any): void;
    confirm(date: any, event: any): any;
    navigate(direction: any, event: any): any;
    select({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): any;
    handleDecadeOnViewDateChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    handleDecadeOnActiveDateChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    handleDecadeOnChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): void;
    handleYearViewOnChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): void;
    onViewDateChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    gotoViewDate({ dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    onActiveDateChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }): void;
    onChange(dateString: any, { dateMoment, timestamp }: {
        dateMoment: any;
        timestamp: any;
    }, event: any): void;
}
