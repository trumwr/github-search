/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _TextInput = _interopRequireDefault(require("../packages/TextInput"));
var _debounce = _interopRequireDefault(require("../packages/debounce"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var StringFilter = function (_React$Component) {
  (0, _inherits2.default)(StringFilter, _React$Component);
  var _super = _createSuper(StringFilter);
  function StringFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, StringFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "input", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refInput", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (_ref) {
      var value = _ref.filterValue.value;
      if (String(value).localeCompare(String(_this.props.filterValue && _this.props.filterValue.value))) {
        if (_this.props.filterValue) {
          _this.onChange(_this.props.filterValue.value);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getInputRef", function () {
      return _this.input;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderClearIcon", function (_ref2) {
      var width = _ref2.width,
        height = _ref2.height;
      return _react.default.createElement("svg", {
        style: {
          width: width,
          height: height
        },
        viewBox: "0 0 10 10"
      }, _react.default.createElement("path", {
        fill: "none",
        fillRule: "evenodd",
        strokeLinecap: "round",
        strokeWidth: "1.33",
        d: "M1 1l8 8m0-8L1 9"
      }));
    });
    _this.refInput = function (i) {
      var _props$filterEditorPr;
      var inputRef = props.inputRef || ((_props$filterEditorPr = props.filterEditorProps) === null || _props$filterEditorPr === void 0 ? void 0 : _props$filterEditorPr.inputRef);
      if (inputRef) {
        if (typeof inputRef === 'function') {
          inputRef(i);
        } else {
          inputRef.current = i;
        }
      }
      _this.input = i;
    };
    var filterValue = props.filterValue;
    _this.state = {
      value: filterValue ? filterValue.value || '' : ''
    };
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onValueChange = _this.onValueChange.bind((0, _assertThisInitialized2.default)(_this));
    if (props.filterDelay && props.filterDelay >= 1) {
      _this.onValueChange = (0, _debounce.default)(_this.onValueChange, props.filterDelay, {
        leading: false,
        trailing: true
      });
    }
    return _this;
  }
  (0, _createClass2.default)(StringFilter, [{
    key: "onChange",
    value: function onChange(value) {
      this.onValueChange(value);
      this.setValue(value);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.setState({
        value: value
      });
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value) {
      this.props.onChange && this.props.onChange(_objectSpread(_objectSpread({}, this.props.filterValue), {}, {
        value: value
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        filterValue = _this$props.filterValue,
        readOnly = _this$props.readOnly,
        disabled = _this$props.disabled,
        style = _this$props.style,
        rtl = _this$props.rtl,
        theme = _this$props.theme,
        placeholder = _this$props.placeholder;
      var inputProps = {
        readOnly: readOnly,
        disabled: disabled,
        theme: theme,
        rtl: rtl,
        value: this.state.value,
        placeholder: placeholder,
        style: _objectSpread({
          minWidth: 0
        }, style)
      };
      var filterEditorProps;
      if (filterValue) {
        filterEditorProps = filterValue.filterEditorProps;
        inputProps.value = this.state.value;
      }
      return this.props.render && this.props.render(_react.default.createElement(_TextInput.default, _objectSpread(_objectSpread({}, filterEditorProps), {}, {
        type: "text",
        ref: this.refInput,
        onChange: this.onChange,
        renderClearIcon: this.renderClearIcon,
        className: "InovuaReactDataGrid__column-header__filter InovuaReactDataGrid__column-header__filter--string"
      }, inputProps)));
    }
  }]);
  return StringFilter;
}(_react.default.Component);
var _default = StringFilter;
exports.default = _default;