/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _getArrowPositionDirection = _interopRequireDefault(require("./getArrowPositionDirection"));
var _clamp = _interopRequireDefault(require("../clamp"));
function getLeftPosition(overlayRegion, targetRegion) {
  return targetRegion.left - overlayRegion.left + targetRegion.width / 2;
}
function getTopPosition(overlayRegion, targetRegion) {
  return targetRegion.top - overlayRegion.top + targetRegion.height / 2;
}
function getArrowPosition(_ref) {
  var overlayRegion = _ref.overlayRegion,
    targetRegion = _ref.targetRegion,
    position = _ref.position,
    arrowSize = _ref.arrowSize;
  var arrowPosition = null;
  var positionDirection = (0, _getArrowPositionDirection.default)(position);
  var left = (0, _clamp.default)(getLeftPosition(overlayRegion, targetRegion), arrowSize / 2, overlayRegion.width - arrowSize / 2);
  var top = (0, _clamp.default)(getTopPosition(overlayRegion, targetRegion), arrowSize / 2, overlayRegion.height - arrowSize / 2);
  arrowPosition = {
    top: {
      position: {
        left: left,
        top: 'calc(100% - 1px)'
      },
      location: 'top'
    },
    bottom: {
      position: {
        left: left,
        bottom: 'calc(100% - 1px)'
      },
      location: 'bottom'
    },
    right: {
      position: {
        top: top,
        right: 'calc(100% - 1px)'
      },
      location: 'right'
    },
    left: {
      position: {
        top: top,
        left: 'calc(100% - 1px)'
      },
      location: 'left'
    }
  }[positionDirection];
  return arrowPosition;
}
var _default = getArrowPosition;
exports.default = _default;