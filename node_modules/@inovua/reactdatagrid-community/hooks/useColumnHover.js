/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var useColumnHover = function useColumnHover(_props, _computedProps, computedPropsRef) {
  var _useState = (0, _react.useState)(-1),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    columnIndexHovered = _useState2[0],
    setColumnIndexHovered = _useState2[1];
  var onColumnMouseEnter = (0, _react.useCallback)(function (cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {
      var columnIndex = cellProps.columnIndex;
      if (columnIndex != null) {
        setColumnIndexHovered(columnIndex);
      }
    }
  }, []);
  var onColumnMouseLeave = (0, _react.useCallback)(function (cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {
      setColumnIndexHovered(-1);
    }
  }, []);
  return {
    columnIndexHovered: columnIndexHovered,
    onColumnMouseEnter: onColumnMouseEnter,
    onColumnMouseLeave: onColumnMouseLeave
  };
};
var _default = useColumnHover;
exports.default = _default;