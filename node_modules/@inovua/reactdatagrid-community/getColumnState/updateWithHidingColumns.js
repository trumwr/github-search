/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _mapColumns = _interopRequireDefault(require("../mapColumns"));
var _getHidingColumns = _interopRequireDefault(require("../getHidingColumns"));
var _default = function _default(columns, props, state, context) {
  var tempNewColumnsMap = (0, _mapColumns.default)(columns, props);
  var hidingColumns = context.hidingColumns;
  if (!hidingColumns.length) {
    var hiding = (0, _getHidingColumns.default)(columns, tempNewColumnsMap, state.columnsMap);
    hidingColumns.push.apply(hidingColumns, (0, _toConsumableArray2.default)(hiding));
  }
  context.hidingColumnsMap = (0, _mapColumns.default)(hidingColumns, props);
  if (hidingColumns.length) {
    hidingColumns.forEach(function (c) {
      var id = c.id || c.name;
      var column = tempNewColumnsMap[id] || c;
      if (context.inTransition) {
        column.width = 0;
        column.minWidth = 0;
        column.maxWidth = 0;
      }
      column.visible = true;
      if (!tempNewColumnsMap[id]) {
        columns.splice(c.initialIndex, 0, c);
      }
    });
  }
  if (hidingColumns.length) {
    var hidingColumn = hidingColumns[0];
    var duration = hidingColumn.hideTransitionDuration !== undefined ? hidingColumn.hideTransitionDuration : hidingColumn.visibilityTransitionDuration;
    columns = columns.map(function (c) {
      c.inTransition = true;
      c.inHideTransition = true;
      c.visibilityTransitionDuration = duration;
      c.hideTransitionDuration = duration;
      return c;
    });
  }
  return columns;
};
exports.default = _default;