/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { ReactElement, RefObject } from 'react';
import PropTypes from 'prop-types';
import { CellProps } from '../Layout/ColumnLayout/Cell/CellProps';
type TypeFilterValue = {
    name: string;
    opertor: string;
    type: string;
    value: boolean | null;
};
type BoolEditorProps = {
    active?: boolean;
    cell?: CellProps;
    cellProps?: CellProps;
    disabled?: boolean;
    emptyValue?: boolean | null;
    filterDelay?: number;
    filterEditorProps?: any;
    filterType?: string;
    filterValue?: TypeFilterValue;
    i18n?: (key: string, defaultLabel: string) => void;
    nativeScroll?: boolean;
    onChange?: Function;
    render?: any;
    renderInPortal?: (el: ReactElement) => void;
    rtl?: boolean;
    theme?: string;
    ref?: RefObject<any>;
    readOnly?: boolean;
    autoFocus?: boolean;
    value?: boolean | null;
    onComplete?: Function;
    onTabNavigation?: Function;
};
declare const BoolEditor: {
    (props: BoolEditorProps): JSX.Element;
    propTypes: {
        onCancel: PropTypes.Requireable<(...args: any[]) => any>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        onComplete: PropTypes.Requireable<(...args: any[]) => any>;
        onKeyDown: PropTypes.Requireable<(...args: any[]) => any>;
        onTabNavigation: PropTypes.Requireable<(...args: any[]) => any>;
        value: PropTypes.Requireable<any>;
    };
};
export default BoolEditor;
