/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactDom = _interopRequireDefault(require("react-dom"));
var _react = require("react");
var _default = function _default(menu, computedProps, menusRef) {
  var menuPortalContainer = computedProps.menuPortalContainer;
  var didMount = menu ? menu.props.componentDidMount : null;
  var willUnmount = menu ? menu.props.componentWillUnmount : null;
  if (menu) {
    menu = (0, _react.cloneElement)(menu, {
      rtl: computedProps.rtl,
      componentDidMount: function componentDidMount() {
        if (didMount) {
          didMount.apply(void 0, arguments);
        }
        menusRef = menusRef || computedProps.menusRef;
        var menuInstance = arguments.length <= 0 ? undefined : arguments[0];
        menusRef.current.push(menuInstance);
      },
      componentWillUnmount: function componentWillUnmount() {
        if (willUnmount) {
          willUnmount.apply(void 0, arguments);
        }
        var menuInstance = arguments.length <= 0 ? undefined : arguments[0];
        menusRef = menusRef || computedProps.menusRef;
        menusRef.current = menusRef.current.filter(function (it) {
          return it !== menuInstance;
        });
      }
    });
  }
  if (menuPortalContainer && _reactDom.default.createPortal) {
    var container = menuPortalContainer;
    if (typeof container === 'string') {
      container = document.querySelector(container);
    }
    if (container) {
      return _reactDom.default.createPortal(menu, container);
    }
  }
  return menu;
};
exports.default = _default;