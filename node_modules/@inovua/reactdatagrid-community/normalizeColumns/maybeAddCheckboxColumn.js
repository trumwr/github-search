/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _defaultCheckColumn = _interopRequireDefault(require("./defaultCheckColumn"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _default(columns, props) {
  var checkboxColumn = props.checkboxColumn;
  if (checkboxColumn) {
    var checkCol = _objectSpread(_objectSpread(_objectSpread({}, _defaultCheckColumn.default), checkboxColumn === true ? null : checkboxColumn), {}, {
      name: null,
      id: _defaultCheckColumn.default.id
    });
    if (checkCol.visible === false) {
      checkCol.visible = true;
    }
    if (columns[0] && columns[0].group && props.groups && props.groups.length) {
      delete checkCol.nextBorderLeft;
    }
    columns = [checkCol].concat(columns);
  }
  return columns;
}