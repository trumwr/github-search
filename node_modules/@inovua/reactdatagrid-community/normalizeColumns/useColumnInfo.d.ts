/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { TypeParam } from '.';
import { TypeColumn } from './types';
import { TypeGroupBy, TypeExpandedRows } from '../types';
import { IColumn, TypeColumns } from '../types/TypeColumn';
import { TypeRowReorder, TypeBuildColumnsProps } from '../types/TypeDataGridProps';
type TypeParamObject = TypeParam & {
    groupBy: TypeGroupBy;
    groupNestingSize: number;
    groupForGroupColumns: string;
    inTransition: boolean;
    hideGroupByColumns: boolean;
    enableRowExpand?: boolean;
    expandedRows?: TypeExpandedRows;
    showPivotSummaryColumns?: boolean;
    maybeAddColumns?: (columns: TypeColumns, props: TypeBuildColumnsProps) => TypeColumns;
    defaultExpandedRows?: TypeExpandedRows;
    renderRowDetails?: (...args: any[]) => any;
    renderDetailsGrid?: (...args: any[]) => any;
    pivotGrandSummaryColumn?: boolean | IColumn;
    rowExpandColumn?: IColumn | boolean;
    rowIndexColumn?: IColumn | boolean;
    onRowReorder?: TypeRowReorder;
    rowReorderColumn?: IColumn | boolean;
    renderRowDetailsExpandIcon?: () => void;
    renderRowDetailsCollapsedIcon?: () => void;
    checkboxColumn?: boolean | TypeColumn;
};
declare const useColumnInfo: (params: TypeParamObject) => any;
export default useColumnInfo;
