/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _default = function _default(_ref) {
  var visibleColumns = _ref.visibleColumns,
    availableWidth = _ref.availableWidth,
    lockedStartColumns = _ref.lockedStartColumns,
    lockedEndColumns = _ref.lockedEndColumns,
    virtualizeColumns = _ref.virtualizeColumns;
  if (virtualizeColumns === false) {
    return visibleColumns.length;
  }
  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {
    return a.computedWidth - b.computedWidth;
  });
  var columnWidthPrefixSums = [];
  var widthSum = 0;
  var accumulateWidth = 0;
  var columnRenderCount = 0;
  columns.forEach(function (col) {
    columnWidthPrefixSums.push(widthSum);
    widthSum += col.computedWidth;
    if (accumulateWidth <= availableWidth) {
      columnRenderCount++;
      accumulateWidth += col.computedWidth;
    }
  });
  columnRenderCount += 1;
  if (lockedStartColumns && lockedStartColumns.length) {
    columnRenderCount -= lockedStartColumns.length;
  }
  if (lockedEndColumns && lockedEndColumns.length) {
    columnRenderCount -= lockedEndColumns.length;
  }
  return columnRenderCount;
};
exports.default = _default;