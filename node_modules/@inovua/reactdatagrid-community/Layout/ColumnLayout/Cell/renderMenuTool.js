/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MenuTool = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _join = _interopRequireDefault(require("../../../packages/join"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BASE_CLASS_NAME = 'InovuaReactDataGrid__column-header__menu-tool';
var MenuTool = function MenuTool(props) {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    keepVisible = _useState2[0],
    setKeepVisible = _useState2[1];
  var domRef = (0, _react.useRef)();
  var _unmounted = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    _unmounted.current = false;
    return function () {
      _unmounted.current = true;
    };
  }, []);
  var onClick = function onClick(event) {
    event.stopPropagation();
  };
  var onMouseDown = function onMouseDown(event) {
    event.preventDefault();
    props.showContextMenu && props.showContextMenu(domRef.current, props.showOnHover ? onHide : null);
    if (_unmounted.current) {
      return;
    }
    if (props.showOnHover && !keepVisible) {
      setKeepVisible(true);
    }
  };
  var onHide = function onHide() {
    if (_unmounted.current) {
      return;
    }
    setKeepVisible(false);
  };
  var renderMenuTool = function renderMenuTool() {
    var domProps = {
      className: (0, _join.default)('', 'InovuaReactDataGrid__sort-icon--desc'),
      width: 14,
      height: 12
    };
    if (props.renderMenuTool) {
      return props.renderMenuTool(domProps);
    }
    return _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
      viewBox: "0 0 14 12"
    }), _react.default.createElement("g", {
      fillRule: "evenodd"
    }, _react.default.createElement("rect", {
      width: "14",
      height: "2",
      rx: "1"
    }), _react.default.createElement("rect", {
      width: "14",
      height: "2",
      y: "5",
      rx: "1"
    }), _react.default.createElement("rect", {
      width: "14",
      height: "2",
      y: "10",
      rx: "1"
    })));
  };
  var className = BASE_CLASS_NAME;
  var showOnHover = props.showOnHover,
    rtl = props.rtl;
  if (showOnHover) {
    className += " ".concat(BASE_CLASS_NAME, "--show-on-hover");
  }
  if (!showOnHover || keepVisible) {
    className += " ".concat(BASE_CLASS_NAME, "--visible");
  }
  className += " ".concat(BASE_CLASS_NAME, "--direction-").concat(rtl ? 'rtl' : 'ltr');
  return _react.default.createElement("div", {
    className: className,
    onMouseDown: onMouseDown,
    onClick: onClick,
    ref: domRef
  }, renderMenuTool());
};
exports.MenuTool = MenuTool;
var _default = function _default(props, cellInstance) {
  if (props.groupSpacerColumn) {
    return null;
  }
  if (!props.showColumnMenuTool) {
    return null;
  }
  return _react.default.createElement(MenuTool, {
    key: "menuTool",
    name: props.name,
    rtl: props.rtl,
    showOnHover: props.showColumnMenuToolOnHover,
    showContextMenu: cellInstance.showContextMenu,
    renderMenuTool: props.renderMenuTool
  });
};
exports.default = _default;