/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _join = _interopRequireDefault(require("../../packages/join"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ResizeOverlay = function (_React$Component) {
  (0, _inherits2.default)(ResizeOverlay, _React$Component);
  var _super = _createSuper(ResizeOverlay);
  function ResizeOverlay(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ResizeOverlay);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setConstrained", function (constrained) {
      if (_this.state.constrained != constrained) {
        _this.setState({
          constrained: constrained
        });
      }
      return (0, _assertThisInitialized2.default)(_this);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setOffset", function (offset) {
      _this.setState({
        offset: offset
      });
      return (0, _assertThisInitialized2.default)(_this);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setActive", function (active, cfg) {
      _this.setState({
        active: active,
        offsetTop: cfg ? cfg.offsetTop || 0 : 0
      });
      return (0, _assertThisInitialized2.default)(_this);
    });
    _this.state = {
      offset: 0,
      constrained: false,
      active: false
    };
    return _this;
  }
  (0, _createClass2.default)(ResizeOverlay, [{
    key: "render",
    value: function render() {
      var _proxyStyle;
      var props = this.props;
      var state = this.state;
      var constrained = state.constrained;
      var active = props.active !== undefined ? props.active : state.active;
      var rtl = props.rtl,
        columnResizeProxyWidth = props.columnResizeProxyWidth,
        columnResizeHandleWidth = props.columnResizeHandleWidth;
      var style = props.style;
      if (active && props.activeStyle) {
        style = Object.assign({}, style, props.activeStyle);
      }
      var className = (0, _join.default)(props.className, 'InovuaReactDataGrid__resize-overlay', active && 'InovuaReactDataGrid__resize-overlay--active');
      var proxyClassName = (0, _join.default)('InovuaReactDataGrid__resize-proxy', constrained && 'InovuaReactDataGrid__resize-proxy--constrained');
      var offset = this.state.offset + (columnResizeHandleWidth - columnResizeProxyWidth) / 2;
      var proxyStyle = (_proxyStyle = {
        transform: "translate3d(".concat((rtl ? -1 : 1) * offset, "px,0px, 0px)")
      }, (0, _defineProperty2.default)(_proxyStyle, rtl ? 'right' : 'left', 0), (0, _defineProperty2.default)(_proxyStyle, rtl ? 'left' : 'right', 'unset'), (0, _defineProperty2.default)(_proxyStyle, "width", columnResizeProxyWidth), (0, _defineProperty2.default)(_proxyStyle, "top", this.state.active ? this.state.offsetTop || 0 : 0), (0, _defineProperty2.default)(_proxyStyle, "bottom", 0), (0, _defineProperty2.default)(_proxyStyle, "height", 'initial'), _proxyStyle);
      if (this.props.resizeProxyStyle) {
        proxyStyle = Object.assign({}, this.props.resizeProxyStyle, proxyStyle);
      }
      return _react.default.createElement("div", {
        style: style,
        className: className
      }, _react.default.createElement("div", {
        className: proxyClassName,
        style: proxyStyle
      }));
    }
  }]);
  return ResizeOverlay;
}(_react.default.Component);
exports.default = ResizeOverlay;
ResizeOverlay.propTypes = {
  resizeProxyStyle: _propTypes.default.shape({})
};