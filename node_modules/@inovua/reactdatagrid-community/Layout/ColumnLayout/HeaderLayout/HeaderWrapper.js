/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _getScrollbarWidth = _interopRequireDefault(require("../../../packages/getScrollbarWidth"));
var _Header = _interopRequireDefault(require("./Header"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var fixScrollLeft = function fixScrollLeft(event) {
  var target = event.currentTarget;
  requestAnimationFrame(function () {
    if (target.scrollLeft) {
      target.scrollLeft = 0;
    }
  });
};
var HeaderWrapper = function (_React$Component) {
  (0, _inherits2.default)(HeaderWrapper, _React$Component);
  var _super = _createSuper(HeaderWrapper);
  function HeaderWrapper() {
    var _this;
    (0, _classCallCheck2.default)(this, HeaderWrapper);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSortedColumnsInfo", function (_ref) {
      var computedSortInfo = _ref.computedSortInfo,
        columnsMap = _ref.columnsMap;
      if (!computedSortInfo) {
        return;
      }
      var sortedColumnsInfo = [];
      if (Array.isArray(computedSortInfo)) {
        computedSortInfo.map(function (sortInfo) {
          sortedColumnsInfo.push(columnsMap[sortInfo.columnName || sortInfo.name]);
        });
      } else {
        return columnsMap[computedSortInfo.columnName];
      }
      return sortedColumnsInfo;
    });
    return _this;
  }
  (0, _createClass2.default)(HeaderWrapper, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var data = props.data,
        deselectAll = props.deselectAll,
        computedShowHeaderBorderRight = props.computedShowHeaderBorderRight,
        headerProps = props.headerProps,
        filterTypes = props.filterTypes,
        filterable = props.filterable,
        isMultiSort = props.isMultiSort,
        nativeScroll = props.nativeScroll,
        resizable = props.resizable,
        resizeProxyStyle = props.resizeProxyStyle,
        scrollLeft = props.scrollLeft,
        scrollbars = props.scrollbars,
        selectAll = props.selectAll,
        selected = props.computedSelected,
        unselected = props.computedUnselected,
        selectedCount = props.computedSelectedCount,
        sortInfo = props.sortInfo,
        sortable = props.sortable,
        renderSortTool = props.renderSortTool,
        totalCount = props.paginationCount,
        unselectedCount = props.computedUnselectedCount,
        virtualListBorderLeft = props.virtualListBorderLeft,
        virtualListBorderRight = props.virtualListBorderRight,
        columns = props.visibleColumns,
        lastLockedStartIndex = props.lastLockedStartIndex,
        lastLockedEndIndex = props.lastLockedEndIndex,
        lastUnlockedIndex = props.lastUnlockedIndex,
        updateLockedWrapperPositions = props.updateLockedWrapperPositions,
        theme = props.theme,
        columnWidthPrefixSums = props.columnWidthPrefixSums,
        renderMenuTool = props.renderMenuTool,
        computedSortInfo = props.computedSortInfo,
        columnsMap = props.columnsMap,
        columnIndexHovered = props.columnIndexHovered,
        onColumnMouseEnter = props.onColumnMouseEnter,
        onColumnMouseLeave = props.onColumnMouseLeave,
        columnHoverClassName = props.columnHoverClassName,
        enableColumnFilterContextMenu = props.enableColumnFilterContextMenu,
        computedEnableColumnHover = props.computedEnableColumnHover,
        renderRowDetailsMoreIcon = props.renderRowDetailsMoreIcon,
        hideColumnContextMenu = props.hideColumnContextMenu,
        updateMenuPosition = props.updateMenuPosition;
      var scrollbarWidth = 0;
      if (nativeScroll && scrollbars.vertical) {
        scrollbarWidth = (0, _getScrollbarWidth.default)();
      }
      var sortedColumnsInfo = this.getSortedColumnsInfo({
        computedSortInfo: computedSortInfo,
        columnsMap: columnsMap
      });
      var headerHeight = !props.computedGroups ? props.headerHeight : undefined;
      return _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper InovuaReactDataGrid__header-wrapper--direction-".concat(this.props.rtl ? 'rtl' : 'ltr'),
        onFocus: fixScrollLeft
      }, nativeScroll && this.props.rtl ? _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-rtl-scroll-spacer",
        style: {
          minWidth: scrollbarWidth,
          display: scrollbarWidth ? 'block' : 'none'
        }
      }) : null, _react.default.createElement(_Header.default, _objectSpread(_objectSpread({}, headerProps), {}, {
        notifyColumnFilterVisibleStateChange: props.notifyColumnFilterVisibleStateChange,
        setScrollLeft: props.setScrollLeft,
        getScrollLeftMax: props.getScrollLeftMax,
        availableWidth: props.availableWidth,
        lockedRows: props.lockedRows,
        rtl: props.rtl,
        i18n: props.i18n,
        lastLockedStartIndex: lastLockedStartIndex,
        lastLockedEndIndex: lastLockedEndIndex,
        lastUnlockedIndex: lastUnlockedIndex,
        columnHeaderUserSelect: props.columnHeaderUserSelect,
        columnRenderCount: props.columnRenderCount,
        columnResizeHandleWidth: props.columnResizeHandleWidth,
        columnUserSelect: props.columnUserSelect,
        renderInPortal: props.renderInPortal,
        columns: columns,
        columnsMap: props.columnsMap,
        data: data,
        filterTypes: filterTypes,
        showColumnMenuTool: props.showColumnMenuTool,
        showColumnMenuToolOnHover: props.showColumnMenuToolOnHover,
        deselectAll: deselectAll,
        firstLockedEndIndex: props.firstLockedEndIndex,
        firstUnlockedIndex: props.firstUnlockedIndex,
        computedGroupsMap: props.computedGroupsMap,
        computedGroupsDepth: props.computedGroupsDepth,
        onColumnHeaderFocus: props.onColumnHeaderFocus,
        filterable: filterable,
        showColumnContextMenu: props.showColumnContextMenu,
        showColumnFilterContextMenu: props.showColumnFilterContextMenu,
        hideColumnFilterContextMenu: props.hideColumnFilterContextMenu,
        computedShowHeaderBorderRight: computedShowHeaderBorderRight,
        hasLockedEnd: props.hasLockedEnd,
        hasLockedStart: props.hasLockedStart,
        headerHeight: headerHeight,
        isMultiSort: isMultiSort,
        lockedEndColumns: props.lockedEndColumns,
        lockedStartColumns: props.lockedStartColumns,
        minWidth: props.minRowWidth,
        nativeScroll: nativeScroll,
        onCellClick: props.onHeaderCellClick,
        onGroupMouseDown: props.onHeaderGroupMouseDown,
        onCellMouseDown: props.onHeaderCellMouseDown,
        onCellTouchStart: props.onHeaderCellTouchStart,
        onResizeMouseDown: props.onResizeMouseDown,
        onResizeTouchStart: props.onResizeTouchStart,
        onSortClick: props.onHeaderSortClick,
        onTransitionEnd: props.onTransitionEnd,
        ref: props.refHeader,
        renderSortTool: renderSortTool,
        resizable: resizable,
        resizeProxyStyle: resizeProxyStyle,
        scrollLeft: scrollLeft,
        scrollbarWidth: scrollbarWidth,
        selectAll: selectAll,
        selectedCount: selectedCount,
        selected: selected,
        unselected: unselected,
        sortInfo: sortInfo,
        sortable: sortable,
        totalCount: totalCount,
        theme: theme,
        renderLockedStartCells: props.renderLockedStartCells,
        renderLockedEndCells: props.renderLockedEndCells,
        onFilterValueChange: props.onFilterValueChange,
        unselectedCount: unselectedCount,
        virtualListBorderLeft: virtualListBorderLeft,
        virtualListBorderRight: virtualListBorderRight,
        updateLockedWrapperPositions: updateLockedWrapperPositions,
        virtualizeColumns: props.virtualizeColumns && !!headerHeight && !props.computedGroups,
        columnWidthPrefixSums: columnWidthPrefixSums,
        renderMenuTool: renderMenuTool,
        sortedColumnsInfo: sortedColumnsInfo,
        columnIndexHovered: columnIndexHovered,
        onColumnMouseEnter: onColumnMouseEnter,
        onColumnMouseLeave: onColumnMouseLeave,
        columnHoverClassName: columnHoverClassName,
        enableColumnFilterContextMenu: enableColumnFilterContextMenu,
        computedEnableColumnHover: computedEnableColumnHover,
        renderRowDetailsMoreIcon: renderRowDetailsMoreIcon,
        hideColumnContextMenu: hideColumnContextMenu,
        updateMenuPosition: updateMenuPosition,
        computedFilterable: props.computedFilterable,
        filterRowHeight: props.filterRowHeight
      })), _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper__fill"
      }, props.computedFilterable && _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper__fill__filters"
      })));
    }
  }]);
  return HeaderWrapper;
}(_react.default.Component);
exports.default = HeaderWrapper;
HeaderWrapper.propTypes = {
  visibleColumns: _propTypes.default.array.isRequired,
  columnsMap: _propTypes.default.object.isRequired,
  deselectAll: _propTypes.default.func,
  headerHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  headerProps: _propTypes.default.object,
  isMultiSort: _propTypes.default.bool,
  refHeader: _propTypes.default.func.isRequired,
  selectAll: _propTypes.default.func,
  setScrollLeft: _propTypes.default.func,
  sortable: _propTypes.default.bool,
  virtualizeColumns: _propTypes.default.bool,
  updateLockedWrapperPositions: _propTypes.default.func,
  lastLockedStartIndex: _propTypes.default.number,
  lastLockedEndIndex: _propTypes.default.number,
  lastUnlockedIndex: _propTypes.default.number,
  computedEnableColumnHover: _propTypes.default.bool,
  renderRowDetailsMoreIcon: _propTypes.default.func,
  computedFilterable: _propTypes.default.bool,
  filterRowHeight: _propTypes.default.number
};