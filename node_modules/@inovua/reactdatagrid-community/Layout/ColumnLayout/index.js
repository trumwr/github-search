/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _region = _interopRequireDefault(require("../../packages/region"));
var _ResizeOverlay = _interopRequireDefault(require("./ResizeOverlay"));
var _setupColumnResize = _interopRequireDefault(require("./setupColumnResize"));
var _join = _interopRequireDefault(require("../../packages/join"));
var _FakeFlex = _interopRequireDefault(require("../../FakeFlex"));
var _HeaderLayout = _interopRequireDefault(require("./HeaderLayout"));
var _Content = _interopRequireDefault(require("./Content"));
var _context = require("../../context");
var _isMobile = _interopRequireDefault(require("../../packages/isMobile"));
var _getGlobal = require("../../getGlobal");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var height100 = {
  height: '100%'
};
var InovuaDataGridColumnLayout = function (_React$Component) {
  (0, _inherits2.default)(InovuaDataGridColumnLayout, _React$Component);
  var _super = _createSuper(InovuaDataGridColumnLayout);
  function InovuaDataGridColumnLayout(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDataGridColumnLayout);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollTop", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lastComputedProps", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "headerLayout", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMNode", function () {
      return _this.columnLayoutRef.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollingTopRegion", function () {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollingBottomRegion", function () {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getContentRows", function () {
      return _this.content.getRows();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollTop", function () {
      return _this.scrollTop || 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderHeaderLayout", function (computedProps) {
      return _react.default.createElement(_HeaderLayout.default, _objectSpread(_objectSpread({}, computedProps), {}, {
        onResizeMouseDown: _this.onResizeMouseDown.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeTouchStart: _this.onResizeTouchStart.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onFilterValueChange: computedProps.computedOnColumnFilterValueChange,
        ref: _this.refHeaderLayout,
        getScrollLeftMax: _this.getScrollLeftMax,
        setScrollLeft: _this.setScrollLeft
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderContent", function (computedProps) {
      var groupBy = computedProps.groupBy;
      var groupByValue = groupBy && groupBy.length ? groupBy : null;
      return _react.default.createElement(_Content.default, _objectSpread(_objectSpread({
        key: "content"
      }, computedProps), {}, {
        getScrollLeftMax: _this.getScrollLeftMax,
        groupBy: groupByValue,
        before: _this.renderLockedStartRows(computedProps),
        after: _this.renderLockedEndRows(computedProps),
        ref: _this.refContent,
        columns: computedProps.visibleColumns,
        minWidth: computedProps.minWidth,
        maxWidth: computedProps.maxWidth,
        onDragRowMouseDown: _this.onDragRowMouseDownHandle,
        onContainerScrollHorizontal: _this.onContainerScrollHorizontal.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onContainerScrollVertical: _this.onContainerScrollVertical.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onColumnRenderStartIndexChange: _this.onColumnRenderStartIndexChange
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onDragRowMouseDownHandle", function (ev, index, cellNode) {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedEndRows", function (computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedStartRows", function (computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedRows", function (rows, position, computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderResizeOverlay", function (computedProps) {
      return _react.default.createElement(_ResizeOverlay.default, {
        resizeProxyStyle: computedProps.resizeProxyStyle,
        columnResizeProxyWidth: computedProps.columnResizeProxyWidth,
        columnResizeHandleWidth: computedProps.columnResizeHandleWidth,
        rtl: computedProps.rtl,
        ref: _this.refResizeOverlay
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onColumnRenderStartIndexChange", function (columnRenderStartIndex) {
      if (_this.headerLayout) {
        _this.headerLayout.setColumnRenderStartIndex(columnRenderStartIndex);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScrollVertical", function (computedProps, scrollTop) {
      _this.scrollTop = scrollTop;
      var computedLockedRows = computedProps.computedLockedRows,
        rowHeight = computedProps.rowHeight,
        stickyHeaders = computedProps.stickyHeaders,
        groupBy = computedProps.groupBy;
      if (rowHeight && stickyHeaders && groupBy && groupBy.length) {
        _this.updateStickyHeader(scrollTop);
      }
      if (computedLockedRows && computedLockedRows.length) {
        _this.updateLockedRows(scrollTop);
      }
      if (computedProps.onScroll) {
        computedProps.onScroll();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScrollHorizontal", function (computedProps, scrollLeft, scrollLeftMax) {
      _this.scrollLeft = scrollLeft;
      if (_this.headerLayout) {
        _this.headerLayout.onContainerScrollHorizontal(scrollLeft, scrollLeftMax);
      }
      if (computedProps.onScroll) {
        computedProps.onScroll();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollLeft", function () {
      return _this.scrollLeft || 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollLeftMax", function () {
      var vl = _this.getVirtualList();
      if (!vl) {
        return 0;
      }
      return vl.scrollContainer.scrollLeftMax;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollTopMax", function () {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      return vl.scrollContainer.scrollTopMax;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollLeft", function (scrollLeft) {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      vl.scrollLeft = scrollLeft;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollTop", function (scrollTop) {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      vl.scrollTop = scrollTop;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVirtualList", function () {
      return _this.content ? _this.content.getVirtualList() : null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startEdit", function (args) {
      return _this.content.startEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cancelEdit", function (args) {
      return _this.content.cancelEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "completeEdit", function (args) {
      return _this.content.completeEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRenderRange", function () {
      return _this.content.getRenderRange();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeaderLayout", function () {
      return _this.headerLayout;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeaderCells", function () {
      return _this.getHeaderLayout().getHeaderCells();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeader", function () {
      return _this.headerLayout.getHeader();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getGroupToolbar", function () {
      return _this.headerLayout.getGroupToolbar();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMColumnHeaderAt", function (index) {
      return _this.headerLayout.getCellDOMNodeAt(index);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeMouseDown", function () {
      var _this2;
      if (_isMobile.default) {
        return;
      }
      (_this2 = _this).onResizeDownAction.apply(_this2, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDownAction", function (computedProps, config, _ref) {
      var colHeaderNode = _ref.colHeaderNode,
        event = _ref.event,
        groupColumns = _ref.groupColumns;
      var visibleIndex = config.computedVisibleIndex;
      _this.setupColumnResize(computedProps, {
        groupColumns: groupColumns,
        visibleIndex: visibleIndex !== undefined ? visibleIndex : config.visibleIndex,
        colHeaderNode: colHeaderNode,
        headerNode: _this.getHeader().getDOMNode(),
        event: event
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeTouchStart", function () {
      var _this3;
      (_this3 = _this).onResizeDownAction.apply(_this3, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setupColumnResize", function (computedProps, _ref2) {
      var visibleIndex = _ref2.visibleIndex,
        groupColumns = _ref2.groupColumns,
        colHeaderNode = _ref2.colHeaderNode,
        event = _ref2.event;
      event.stopPropagation();
      if (event.ctrlKey) {
        return;
      }
      var rtl = computedProps.rtl;
      var region = _region.default.from(event.currentTarget.firstChild || event.currentTarget);
      var columns = computedProps.visibleColumns;
      var firstFlexIndex = columns.reduce(function (index, col, i) {
        if (col.flex != null && index == -1) {
          return i;
        }
        return index;
      }, -1);
      var index = visibleIndex;
      var headerRegion = _region.default.from(_this.getHeaderLayout().headerDomNode.current);
      var constrainTo = _region.default.from(headerRegion.get());
      constrainTo.set((0, _defineProperty2.default)({}, _this.props.rtl ? 'left' : 'right', (_this.props.rtl ? -1 : 1) * (globalObject.screen ? globalObject.screen.width * 3 : _region.default.from(document.documentElement).getRight() * 2)));
      var column = columns[index];
      var columnRegion = _region.default.from(colHeaderNode);
      var extraOffset = column.lastInGroup ? region.width : region.width / 2;
      var maxPos;
      if (groupColumns) {
        var columnsMap = computedProps.columnsMap;
        var groupCols = groupColumns.map(function (colId) {
          return columnsMap[colId];
        });
        var firstColumnRegion = _region.default.from(_this.getDOMColumnHeaderAt(groupCols[0].computedVisibleIndex));
        var minWidth = groupCols.reduce(function (acc, col) {
          return acc + col.computedMinWidth;
        }, 0);
        var maxWidth = groupCols.reduce(function (acc, col) {
          return acc + (col.computedMaxWidth || Infinity);
        }, 0);
        var pos = rtl ? firstColumnRegion.right - minWidth - extraOffset : minWidth + firstColumnRegion.left - extraOffset;
        constrainTo.set((0, _defineProperty2.default)({}, rtl ? 'right' : 'left', pos));
        if (maxWidth !== Infinity) {
          maxPos = rtl ? firstColumnRegion.right - maxWidth : firstColumnRegion.left + maxWidth + extraOffset;
        }
      } else {
        var _minWidth = column.computedMinWidth;
        if (_this.props.rtl) {
          var right = columnRegion.right - _minWidth - extraOffset;
          constrainTo.set({
            right: right
          });
          if (column.computedMaxWidth) {
            maxPos = columnRegion.right - column.computedMaxWidth;
          }
        } else {
          var left = _minWidth + columnRegion.left - extraOffset;
          constrainTo.set({
            left: left
          });
          if (column.computedMaxWidth) {
            maxPos = columnRegion.left + column.computedMaxWidth;
          }
        }
      }
      var shareSpace = computedProps.shareSpaceOnResize;
      var nextCol = columns[index + 1];
      var nextColHeaderNode = _this.getDOMColumnHeaderAt(index + 1);
      var nextColumnRegion = nextCol ? _region.default.from(nextColHeaderNode) : null;
      if (column && column.computedResizable === false || nextCol && nextCol.computedResizable === false) {
        shareSpace = false;
      }
      if (shareSpace && nextColHeaderNode) {
        if (_this.props.rtl) {
          var nextColLeft = nextColumnRegion.left + nextCol.computedMinWidth;
          if (!maxPos || nextColLeft > maxPos) {
            maxPos = nextColLeft;
          }
        } else {
          var nextColRight = nextColumnRegion.right - nextCol.computedMinWidth;
          if (!maxPos || nextColRight < maxPos) {
            maxPos = nextColRight;
          }
        }
      }
      if (maxPos != null) {
        constrainTo.set((0, _defineProperty2.default)({}, _this.props.rtl ? 'left' : 'right', maxPos));
      }
      if (_this.props.rtl) {
        if (nextCol) {
          constrainTo.set({
            left: constrainTo.left - computedProps.columnResizeHandleWidth / 2
          });
        }
        constrainTo.set({
          right: constrainTo.right + computedProps.columnResizeHandleWidth
        });
      }
      _this.props.coverHandleRef.current.setCursor('col-resize');
      (0, _setupColumnResize.default)({
        headerRegion: headerRegion,
        constrainTo: constrainTo,
        region: region,
        columns: columns,
        index: index,
        rtl: _this.props.rtl,
        extraOffset: 0,
        firstFlexIndex: firstFlexIndex,
        groupColumns: groupColumns,
        shareSpaceOnResize: computedProps.shareSpaceOnResize,
        shareSpace: shareSpace,
        nextColumnSize: nextColumnRegion ? nextColumnRegion.width : null,
        initialSize: columnRegion.width
      }, {
        onResizeDragInit: _this.onResizeDragInit.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeDrag: _this.onResizeDrag.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeDrop: _this.onResizeDrop.bind((0, _assertThisInitialized2.default)(_this), computedProps)
      }, event);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDragInit", function (computedProps, _ref3) {
      var offset = _ref3.offset,
        constrained = _ref3.constrained;
      var offsetTop = _this.getHeaderLayout().getHeader().domRef.current.offsetTop;
      _this.props.coverHandleRef.current.setActive(true);
      _this.resizeOverlay.setOffset(offset).setActive(true, {
        offsetTop: offsetTop
      }).setConstrained(constrained);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDrop", function (computedProps, _ref4) {
      var index = _ref4.index,
        offset = _ref4.offset,
        diff = _ref4.diff,
        groupColumns = _ref4.groupColumns,
        constrained = _ref4.constrained,
        size = _ref4.size,
        nextColumnSize = _ref4.nextColumnSize,
        firstFlexIndex = _ref4.firstFlexIndex,
        shareSpace = _ref4.shareSpace;
      _this.props.coverHandleRef.current.setActive(false);
      if (_this.resizeOverlay) {
        _this.resizeOverlay.setOffset(offset).setConstrained(constrained).setActive(false);
      }
      if (computedProps.virtualizeColumns) {
        setTimeout(function () {
          _this.headerLayout.header.updateColumns();
        }, 10);
      }
      computedProps.computedOnColumnResize({
        groupColumns: groupColumns,
        diff: diff,
        index: index,
        size: size,
        nextColumnSize: nextColumnSize,
        firstFlexIndex: firstFlexIndex,
        shareSpace: shareSpace
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDrag", function (computedProps, _ref5) {
      var offset = _ref5.offset,
        constrained = _ref5.constrained;
      if (_this.resizeOverlay) {
        _this.resizeOverlay.setOffset(offset).setConstrained(constrained);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowFullyVisible", function (index) {
      return _this.content.isRowFullyVisible(index);
    });
    _this.refResizeOverlay = function (r) {
      _this.resizeOverlay = r;
    };
    _this.refHeaderLayout = function (layout) {
      _this.headerLayout = layout;
    };
    _this.columnLayoutRef = (0, _react.createRef)();
    _this.refContent = function (c) {
      _this.content = c;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaDataGridColumnLayout, [{
    key: "tryStartEdit",
    value: function tryStartEdit(args) {
      return this.content.tryStartEdit(args);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;
      var className = (0, _join.default)('InovuaReactDataGrid__column-layout');
      return _react.default.createElement(_context.Consumer, null, function (computedProps) {
        var flexIndex = 1;
        var useNativeFlex = computedProps.useNativeFlex;
        _this4.lastComputedProps = computedProps;
        return _react.default.createElement("div", {
          ref: _this4.columnLayoutRef,
          className: className,
          style: _objectSpread(_objectSpread({}, height100), _this4.props.style)
        }, _react.default.createElement(_FakeFlex.default, {
          useNativeFlex: useNativeFlex,
          flexIndex: flexIndex,
          getNode: _this4.getDOMNode
        }, _this4.renderHeaderLayout(computedProps), _this4.renderContent(computedProps)), computedProps && computedProps.rowReorderAutoScroll && _this4.renderScrollingTopRegion(), _this4.renderReorderRowProxy(computedProps), _this4.renderResizeOverlay(computedProps), _this4.renderDragRowArrow(computedProps), computedProps && computedProps.rowReorderAutoScroll && _this4.renderScrollingBottomRegion());
      });
    }
  }, {
    key: "renderReorderRowProxy",
    value: function renderReorderRowProxy() {
      return null;
    }
  }, {
    key: "renderDragRowArrow",
    value: function renderDragRowArrow() {
      return null;
    }
  }, {
    key: "updateLockedRows",
    value: function updateLockedRows(scrollTop) {
      return;
    }
  }, {
    key: "updateStickyHeader",
    value: function updateStickyHeader() {}
  }]);
  return InovuaDataGridColumnLayout;
}(_react.default.Component);
exports.default = InovuaDataGridColumnLayout;
InovuaDataGridColumnLayout.defaultProps = {
  reorderProxySize: 3
};
InovuaDataGridColumnLayout.propTypes = {
  minRowWidth: _propTypes.default.number,
  onMount: _propTypes.default.func,
  onUnmount: _propTypes.default.func,
  onRowMouseEnter: _propTypes.default.func,
  onRowMouseLeave: _propTypes.default.func,
  reorderProxySize: _propTypes.default.number.isRequired
};